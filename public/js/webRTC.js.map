{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/webRTC.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","myVideoStream","myAudioStream","socket","io","peer","Peer","initiator","trickle","peerConnections","mediaContainer","document","getElementById","videoGrid","audioInputSelect","querySelector","audioOutputSelect","videoSelect","selectors","gotDevices","deviceInfos","values","map","select","forEach","firstChild","removeChild","length","deviceInfo","option","createElement","deviceId","kind","text","label","appendChild","console","log","selectorIndex","Array","slice","childNodes","some","handleError","error","message","data","myId","user","roomID","emit","start","addAudio","audio","stream","srcObject","addEventListener","play","append","addVideo","video","removeElementByID","id","element","remove","connectMedia","constraints","navigator","mediaDevices","getUserMedia","then","window","videoElement","setAttribute","muted","addMyVideo","addMyAudio","enumerateDevices","err","alert","getTracks","track","stop","audioSource","videoSource","exact","undefined","restart","disabled","HTMLMediaElement","onchange","sinkId","audioDestination","setSinkId","errorMessage","selectedIndex","warn","on","conn","answer","userStream","getAudioTracks","getVideoTracks","callerElement","callback","ctr","close"],"mappings":"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","file":"/js/webRTC.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/*\n *  Copyright (c) 2015 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\nconst socket = io('https://rtcserver.esuccess-inc.com:40002', {});\n\nconst peer = new Peer({\n    initiator: false,\n    trickle: false,\n});\n\n'use strict';\nlet myVideoStream;\nlet myAudioStream;\n\n\nconst peerConnections = {}\n\n\nlet mediaContainer = document.getElementById('myMediaContainer');\n\n\nlet videoGrid = document.getElementById('videoGrid');\n\nconst audioInputSelect = document.querySelector('select#audioSource');\nconst audioOutputSelect = document.querySelector('select#audioOutput');\nconst videoSelect = document.querySelector('select#videoSource');\nconst selectors = [audioInputSelect, audioOutputSelect, videoSelect];\n\naudioOutputSelect.disabled = !('sinkId' in HTMLMediaElement.prototype);\n\nfunction gotDevices(deviceInfos) {\n    // Handles being called several times to update labels. Preserve values.\n    const values = selectors.map(select => select.value);\n    selectors.forEach(select => {\n        while (select.firstChild) {\n            select.removeChild(select.firstChild);\n        }\n    });\n    for (let i = 0; i !== deviceInfos.length; ++i) {\n        const deviceInfo = deviceInfos[i];\n        const option = document.createElement('option');\n        option.value = deviceInfo.deviceId;\n        if (deviceInfo.kind === 'audioinput') {\n            option.text = deviceInfo.label || `microphone ${audioInputSelect.length + 1}`;\n            audioInputSelect.appendChild(option);\n        } else if (deviceInfo.kind === 'audiooutput') {\n            option.text = deviceInfo.label || `speaker ${audioOutputSelect.length + 1}`;\n            audioOutputSelect.appendChild(option);\n        } else if (deviceInfo.kind === 'videoinput') {\n            option.text = deviceInfo.label || `camera ${videoSelect.length + 1}`;\n            videoSelect.appendChild(option);\n        } else {\n            console.log('Some other kind of source/device: ', deviceInfo);\n        }\n    }\n    selectors.forEach((select, selectorIndex) => {\n        if (Array.prototype.slice.call(select.childNodes).some(n => n.value === values[selectorIndex])) {\n            select.value = values[selectorIndex];\n        }\n    });\n}\n\nnavigator.mediaDevices.enumerateDevices().then(gotDevices).catch(handleError);\n\n// Attach audio output device to video element using device/sink ID.\nfunction attachSinkId(element, sinkId) {\n    if (typeof element.sinkId !== 'undefined') {\n        element.setSinkId(sinkId)\n            .then(() => {\n                console.log(`Success, audio output device attached: ${sinkId}`);\n            })\n            .catch(error => {\n                let errorMessage = error;\n                if (error.name === 'SecurityError') {\n                    errorMessage = `You need to use HTTPS for selecting audio output device: ${error}`;\n                }\n                console.error(errorMessage);\n                // Jump back to first output device in the list as it's the default.\n                audioOutputSelect.selectedIndex = 0;\n            });\n    } else {\n        console.warn('Browser does not support output device selection.');\n    }\n}\n\nfunction changeAudioDestination() {\n    const audioDestination = audioOutputSelect.value;\n    attachSinkId(videoElement, audioDestination);\n}\n\nfunction gotStream(stream) {\n    window.stream = stream; // make stream available to console\n    videoElement.srcObject = stream;\n\n    //Register the video stream to my Stream\n    myVideoStream = stream;\n\n    // Refresh button list in case labels have become available\n    return navigator.mediaDevices.enumerateDevices();\n}\n\nfunction handleError(error) {\n\n    console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\n\n\n    data = {\n        'id': myId,\n        'user': user,\n        'roomID': roomID\n    }\n\n    socket.emit(\"newUser\", data);\n\n    //start a video with audio connection width data of user\n    let video = false;\n    let audio = true;\n\n    console.log(data);\n\n    start(video, audio, data);\n}\n\n\nfunction addMyAudio(audio, stream) {\n    audio.srcObject = stream;\n    audio.addEventListener('loadedmetadata', () => {\n        audio.play()\n    })\n    mediaContainer.append(audio);\n}\n\n\nfunction addMyVideo(video, stream) {\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n    mediaContainer.append(video);\n}\n\n\nfunction addAudio(audio, stream) {\n    audio.srcObject = stream;\n    audio.addEventListener('loadedmetadata', () => {\n        audio.play()\n    })\n    videoGrid.append(audio);\n}\n\nfunction addVideo(video, stream) {\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n    videoGrid.append(video);\n}\n\nfunction removeElementByID(id) {\n    let element = document.getElementById(id);\n    if (element) {\n        element.remove();\n    }\n}\n\nfunction connectMedia(video, audio, constraints) {\n\n    navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\n\n        removeElementByID(\"myVideo\");\n        removeElementByID(\"myAudio\");\n\n        if (audio == true && video == true) {\n\n            //Register the video stream to my Stream\n            myVideoStream = stream;\n            window.stream = stream; // make stream available to console       \n\n            myAudioStream = null;\n\n            console.log(\"this is a video\");\n\n            videoElement = document.createElement('video');\n            videoElement.setAttribute(\"id\", \"myVideo\");\n            videoElement.muted = true;\n            addMyVideo(videoElement, stream);\n\n        } else {\n\n\n            //Register the video stream to my Stream\n            myVideoStream = null;\n\n            window.stream = stream; // make stream available to console       \n            myAudioStream = stream;\n\n            console.log(\"this is a audio only\")\n\n            audio = document.createElement('audio');\n            audio.setAttribute(\"class\", \"myAudio\");\n            audio.setAttribute(\"controls\", \"controls\");\n            audio.muted = true;\n\n            addMyAudio(audio, stream);\n\n        }\n\n        socket.emit(\"changeMedia\", data);\n\n        return navigator.mediaDevices.enumerateDevices();\n\n\n    }).then(gotDevices).catch((err) => {\n\n        if (video == true && audio == true) {\n            handleError(err);\n        } else {\n\n            alert(\"no media detected, please connect and try again\")\n        }\n    });\n\n\n}\n\nfunction start(video, audio, data) {\n\n    if (window.stream) {\n\n        window.stream.getTracks().forEach(track => {\n            track.stop();\n        });\n    }\n    const audioSource = audioInputSelect.value;\n    const videoSource = videoSelect.value;\n\n    if (video == true && audio == true) {\n\n        const constraints = {\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n            video: { deviceId: videoSource ? { exact: videoSource } : undefined }\n        };\n\n        connectMedia(video, audio, constraints)\n\n    } else if (video == false && audio == true) {\n\n        const constraints = {\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n            video: false\n        };\n\n        connectMedia(video, audio, constraints)\n\n    } else {\n\n        alert(\"no media detected, please connect and try again\")\n    }\n\n}\n\nfunction restart() {\n\n    if (window.stream) {\n        window.stream.getTracks().forEach(track => {\n            track.stop();\n        });\n    }\n\n    const audioSource = audioInputSelect.value;\n    const videoSource = videoSelect.value;\n    const constraints = {\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\n\n        console.log(\"restart\")\n\n        window.stream = stream; // make stream available to console\n        videoElement.srcObject = stream;\n\n        //Register the video stream to my Stream\n        myVideoStream = stream;\n\n        data = {\n            'id': myId,\n            'user': user,\n            'roomID': roomID,\n            'videoStream': myVideoStream\n        }\n\n        socket.emit(\"changeMedia\", data);\n\n\n    }).catch(handleError);\n}\n\naudioInputSelect.onchange = restart;\naudioOutputSelect.onchange = changeAudioDestination;\nvideoSelect.onchange = restart;\n\n\n\n\npeer.on('connection', function(conn) {\n    conn.on('data', function(data) {\n        console.log(\"peer connected\", data)\n    });\n    conn.on('close', () => {\n        alert(\"close\")\n    });\n});\n\npeer.on('open', (id) => {\n    console.log(\"my peer id\" + id)\n    console.log(\"my user \", user)\n    console.log(\"my room id \", roomID)\n\n    myId = id;\n\n    data = {\n        'id': id,\n        'user': user,\n        'roomID': roomID\n    }\n\n    socket.emit(\"newUser\", data);\n\n    //start a video with audio connection width data of user\n    let video = true;\n    let audio = true;\n\n    start(video, audio, data)\n\n});\n\n\n\npeer.on('call', call => {\n\n    let ctr = 0;\n\n    console.log(\"call\");\n\n\n    call.answer(myVideoStream);\n\n    call.on('stream', (userStream) => {\n\n\n        //if (ctr == 1) {\n        /*\n        removeElementByID(call.peer);\n        callerElement = document.createElement('video');\n        callerElement.setAttribute(\"id\", call.peer);\n        callerElement.setAttribute(\"class\", \"callerVideo\");\n        callerElement.muted = false;\n        addVideo(callerElement, userStream);\n        */\n        //}\n        //ctr++\n        //if (ctr == 0) {\n\n        if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\n\n            console.log(\"callback is a video\")\n\n            removeElementByID(data.id);\n\n            callerElement = document.createElement('video');\n            callerElement.setAttribute(\"id\", data.id);\n            callerElement.setAttribute(\"class\", \"callerBackVideo\");\n            callerElement.muted = false;\n\n            addVideo(callerElement, userStream);\n\n\n        } else {\n\n            console.log(\"callback AUDIO\")\n\n            removeElementByID(data.id);\n\n            callerElement = document.createElement('audio');\n            callerElement.setAttribute(\"id\", data.id);\n            callerElement.setAttribute(\"class\", \"callbackAudio\");\n            callerElement.setAttribute(\"controls\", \"controls\");\n            callerElement.muted = false;\n\n            addAudio(callerElement, userStream);\n        }\n        // }\n\n        ctr++\n\n\n    });\n\n    call.on('close', () => {\n        removeElementByID(call.peer);\n        console.log(\"user disconected\")\n    });\n\n});\n\npeer.on('close', (id) => {\n    document.getElementById(id).remove();\n});\n\n\nsocket.on('userJoined', (data) => {\n\n    /*\n\n    let id = data.id;\n    let roomID = data.roomID;\n    let user = data.user;\n\n    const callback = peer.call(id, myVideoStream);\n\n    if (callback) {\n\n        let ctr = 0;\n        callback.on('stream', (userStream) => {\n\n            if (ctr == 1) {\n\n                removeElementByID(data.id);\n\n                callerElement = document.createElement('video');\n                callerElement.setAttribute(\"id\", data.id);\n                callerElement.setAttribute(\"class\", \"callerBackVideo\");\n                callerElement.muted = false;\n                addVideo(callerElement, userStream);\n            }\n            ctr++;\n        });\n\n        callback.on('close', () => {\n            console.log(\"closing! callback video...\")\n            removeElementByID(data.id);\n        });\n\n        callback.on('error', (err) => {\n            console.log(err);\n        });\n    }\n    */\n\n});\n\n\nsocket.on('mediaChanged', (data) => {\n\n    let id = data.id;\n    let roomID = data.roomID;\n    let user = data.user;\n\n    let callback = null;\n\n    if (myVideoStream !== null) {\n        callback = peer.call(id, myVideoStream);\n    } else if (myAudioStream !== null) {\n        callback = peer.call(id, myAudioStream);\n    }\n\n    console.log(\"my video\", myVideoStream);\n    console.log(\"my video\", myAudioStream);\n\n\n\n    if (callback) {\n\n        let ctr = 0;\n\n        callback.on('stream', (userStream) => {\n\n            if (ctr == 0) {\n\n                console.log(userStream.getAudioTracks().length)\n                console.log(userStream.getVideoTracks().length)\n\n                if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\n\n                    console.log(\"user sent a video\")\n\n                    removeElementByID(data.id);\n\n\n                    callerElement = document.createElement('video');\n                    callerElement.setAttribute(\"id\", data.id);\n                    callerElement.setAttribute(\"class\", \"callerBackVideo\");\n                    callerElement.muted = false;\n\n                    addVideo(callerElement, userStream);\n\n\n                } else {\n\n                    console.log(\"user sent a AUDIO\")\n\n                    removeElementByID(data.id);\n\n\n                    callerElement = document.createElement('audio');\n                    callerElement.setAttribute(\"id\", data.id);\n                    callerElement.setAttribute(\"class\", \"callbackAudio\");\n                    callerElement.setAttribute(\"controls\", \"controls\");\n                    callerElement.muted = false;\n\n                    addAudio(callerElement, userStream);\n                }\n\n            }\n\n\n            ctr++;\n        });\n\n        callback.on('close', () => {\n            removeElementByID(data.id);\n        });\n\n        callback.on('error', (err) => {\n            console.log(err);\n        });\n\n        peerConnections[data.id] = callback;\n    }\n});\n\n\nsocket.on('userDisconnect', id => {\n\n    console.log(\"userDisconnected\", id);\n\n    removeElementByID(id);\n\n    if (peerConnections[id]) {\n        peerConnections[id].close();\n    }\n});"],"sourceRoot":""}