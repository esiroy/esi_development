{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/webRTC.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","myVideoStream","socket","io","peer","Peer","videoGrid","document","getElementById","myvideo","createElement","setAttribute","mySharedVideo","muted","peerConnections","shareScreen","navigator","mediaDevices","getDisplayMedia","video","audio","then","stream","sharedScreen","getVideoTracks","onended","remove","keys","forEach","peerID","conn","connect","on","send","vid","newcall","err","console","log","userStream","srcObject","addEventListener","play","append","replaceVideo","addVideo","id","getUserMedia","isSharedScreen","answer","alert","message","emit","roomID","type","close","track","readyState","stop","getTracks","enabled","getAudioTracks"],"mappings":"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","file":"/js/webRTC.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","const socket = io('https://rtcserver.esuccess-inc.com:40002', {});\nconst peer = new Peer();\nlet myVideoStream;\nlet myId;\nvar videoGrid = document.getElementById('videoGrid')\n\nvar myvideo = document.createElement('video');\nmyvideo.setAttribute(\"id\", \"myVideo\")\n\nvar mySharedVideo = document.createElement('video');\nmySharedVideo.setAttribute(\"id\", \"sharedVideo\");\n\nlet isSharedVideo = false;\n\nmyvideo.muted = true;\n\n\nconst peerConnections = {}\n\nsocket.on(\"connect\", () => {\n    console.log(\"socket created \" + socket.id);\n    createUserMedia();\n\n});\n\n\n\npeer.on('open', (id) => {\n\n    console.log(\"my peer id\" + id)\n    myId = id;\n    socket.emit(\"newUser\", id, roomID);\n});\n\npeer.on('error', (err) => {\n    console.log(err + \" : \" + err.type)\n});\n\n\nsocket.on('userShared', (roomID, stream) => {\n\n    /*\n    console.log(\"user shared :\" + myId);\n    const call = peer.call(myId, stream);\n\n    call.on(\"stream\", (remoteStream) => {\n        // Show stream in some <video> element.\n    });\n    */\n\n});\n\n\nfunction createUserMedia() {\n\n    console.log(\"my media created!\")\n\n    navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false\n    }).then((stream) => {\n\n        myVideoStream = stream;\n\n        var vid = document.createElement('video');\n        vid.setAttribute(\"id\", \"callerVideo\");\n\n        addVideo(myvideo, myVideoStream);\n\n        peer.on('connection', function(conn) {\n\n            conn.on('data', function(isSharedScreen) {\n\n                if (isSharedScreen == true) {\n                    vid = document.createElement('video');\n                    vid.setAttribute(\"id\", \"sharedVideo\");\n                } else {\n                    stopSharing();\n                    return false;\n\n                }\n\n                console.log(isSharedScreen);\n            });\n\n        });\n\n        peer.on('close', function(conn) {\n            console.log(\"close\")\n        });\n\n        peer.on('call', call => {\n\n            console.log(\"called\");\n            call.answer(stream);\n\n            call.on('stream', userStream => {\n                addVideo(vid, userStream);\n            });\n\n            call.on('finish', function() {\n                console.log(\"called finish\")\n            });\n\n            call.on('error', (err) => {\n                alert(err)\n            });\n\n            call.on(\"close\", () => {\n                console.log(vid);\n                vid.remove();\n            });\n\n            peerConnections[call.peer] = call;\n        });\n\n    }).catch(err => {\n        alert(err.message)\n    });\n}\n\n//user end stop sharing\nfunction stopSharing() {\n    document.getElementById(\"sharedVideo\").remove();\n}\n\n\nfunction shareScreen() {\n\n    navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n    }).then((stream) => {\n\n        sharedScreen = stream;\n\n        //The screen record is stopped by myself\n        sharedScreen.getVideoTracks()[0].onended = function() {\n            document.getElementById(\"sharedVideo\").remove();\n\n            //send this shared screen false to stop peer\n            Object.keys(peerConnections).forEach(function(peerID) {\n                var conn = peer.connect(peerID);\n                conn.on('open', () => {\n                    let isSharedScreen = false;\n                    conn.send(isSharedScreen);\n                });\n            })\n        };\n\n        //Connect to peers\n        Object.keys(peerConnections).forEach(function(peerID) {\n            //connect and send\n            var conn = peer.connect(peerID);\n            conn.on('open', () => {\n                let isSharedScreen = true;\n                conn.send(isSharedScreen);\n                const vid = document.createElement('video');\n                vid.setAttribute(\"id\", \"vid\");\n\n                const newcall = peer.call(peerID, sharedScreen);\n\n                newcall.on('error', (err) => {\n                    console.log(err)\n                });\n\n                newcall.on('stream', userStream => {\n                    // addVideo(vid, userStream);\n                });\n\n                newcall.on('close', () => {\n                    vid.remove();\n                    console.log(\"user disconect\")\n                });\n\n            });\n\n        });\n\n        replaceVideo(mySharedVideo, sharedScreen);\n\n        //socket.emit(\"userShare\", roomID, sharedScreen);\n\n    });\n}\n\n\n\nsocket.on('userJoined', id => {\n    console.log(\"new user joined\", id);\n    const call = peer.call(id, myVideoStream);\n    const vid = document.createElement('video');\n    vid.setAttribute(\"id\", \"userVid\")\n\n    call.on('error', (err) => {\n        console.log(err);\n    })\n    call.on('stream', userStream => {\n        addVideo(vid, userStream);\n    })\n    call.on('close', () => {\n        vid.remove();\n        console.log(\"user disconected\")\n    });\n\n    peerConnections[id] = call;\n});\n\n\nsocket.on('userDisconnect', id => {\n    if (peerConnections[id]) {\n        peerConnections[id].close();\n    }\n});\n\n\nfunction replaceVideo(video, stream) {\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n    videoGrid.append(video);\n\n}\n\n\nfunction addVideo(video, stream) {\n\n\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n    videoGrid.append(video);\n\n\n}\n\n\nfunction stopCam() {\n\n    //myVideoStream.getVideoTracks().forEach(track => track.stop());\n\n    myVideoStream.getVideoTracks().forEach(function(track) {\n        if (track.readyState == 'live') {\n            track.stop();\n        } else {\n            console.log(\"video broadcasting live\");\n        }\n    });\n\n    myVideoStream.getTracks().forEach(function(track) {\n        if (track.readyState == 'live') {\n            track.stop();\n        } else {\n            console.log(\"audio not broadcasting live\");\n        }\n    });\n}\n\n// stop only camera\nfunction stopVideoOnly(stream) {\n    stream.getTracks().forEach(function(track) {\n        if (track.readyState == 'live' && track.kind === 'video') {\n            track.stop();\n        }\n    });\n}\n\n// stop only mic\nfunction stopAudioOnly(stream) {\n    stream.getTracks().forEach(function(track) {\n        if (track.readyState == 'live' && track.kind === 'audio') {\n            track.stop();\n        }\n    });\n}\n\nfunction muteCam() {\n    myVideoStream.getVideoTracks().forEach((track) => {\n        track.enabled = !track.enabled\n        console.log(track)\n    });\n}\n\nfunction muteMic() {\n    myVideoStream.getAudioTracks().forEach(track => track.enabled = !track.enabled);\n}\n\n//DOM Execution\ndocument.getElementById(\"stopCamera\").addEventListener(\"click\", function() {\n    stopCam();\n});\n\ndocument.getElementById(\"toggleCamera\").addEventListener(\"click\", function() {\n    muteCam();\n});\n\ndocument.getElementById(\"toggleAudio\").addEventListener(\"click\", function() {\n    muteMic();\n});\n\ndocument.getElementById(\"shareScreen\").addEventListener(\"click\", function() {\n    shareScreen();\n});"],"sourceRoot":""}