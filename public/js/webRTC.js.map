{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/webRTC.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_regeneratorRuntime","e","a","iterator","asyncIterator","u","define","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","type","arg","h","f","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","videoElement","audioElement","socket","io","myId","peer","Peer","initiator","trickle","myVideoStream","myAudioStream","userCallStream","recieverCallStream","userJoinedStream","sharedScreen","peerConnections","mediaContainer","document","getElementById","videoGrid","audioInputSelect","querySelector","audioOutputSelect","videoSelect","selectors","gotDevices","deviceInfos","map","select","firstChild","removeChild","deviceInfo","option","createElement","deviceId","kind","text","label","concat","appendChild","selectorIndex","Array","childNodes","some","attachSinkId","element","sinkId","muted","setSinkId","errorMessage","console","selectedIndex","warn","handleError","data","user","roomID","start","addAudio","audio","stream","srcObject","addEventListener","play","append","addVideo","video","addVideoContent","containerID","containerElement","hideByElementId","elementID","el","style","display","removeElementByID","id","remove","createUserMedia","constraints","navigator","mediaDevices","getUserMedia","window","setAttribute","addMyVideo","addMyAudio","enumerateDevices","getTracks","track","audioSource","videoSource","exact","restart","emit","stopSharing","log","showElement","checkAndRemoveSharedVideo","container","parent","parentNode","newContainer","textContent","insertBefore","removeSharedVideo","setTimeout","shareScreen","getDisplayMedia","userStream","sharedVid","peerID","conn","connect","on","send","getVideoTracks","onended","checkAudioMuted","getAudioTracks","enabled","checkVideoDisabled","disabled","HTMLMediaElement","onchange","audioDestination","alert","sharedVideo","ctr","answer","callerElement","mediaStream","callback","audioConstraints","mediaCallStream","close","$","show","hide","volumeControl","destroyVideoSteam","destroyAudioStream","audioStream","destroyUserMediaContainer","_destroyUserMedia","_callee","_context","volume","applyConstraints","destroySessionMediaBtn","destroyUserMedia"],"mappings":";aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,G,2TCjFrDC,EAAA,kBAAAC,GAAA,IAAAf,EAAAe,EAAA,GAAAnB,EAAAJ,OAAAkB,UAAAH,EAAAX,EAAAe,eAAApB,EAAAC,OAAAC,gBAAA,SAAAO,EAAAe,EAAAnB,GAAAI,EAAAe,GAAAnB,EAAAG,OAAAjB,EAAA,mBAAAe,cAAA,GAAAmB,EAAAlC,EAAAmC,UAAA,aAAA9B,EAAAL,EAAAoC,eAAA,kBAAAC,EAAArC,EAAAgB,aAAA,yBAAAsB,EAAApB,EAAAe,EAAAnB,GAAA,OAAAJ,OAAAC,eAAAO,EAAAe,EAAA,CAAAhB,MAAAH,EAAAF,YAAA,EAAA2B,cAAA,EAAAC,UAAA,IAAAtB,EAAAe,GAAA,IAAAK,EAAA,aAAApB,GAAAoB,EAAA,SAAApB,EAAAe,EAAAnB,GAAA,OAAAI,EAAAe,GAAAnB,GAAA,SAAA2B,EAAAvB,EAAAe,EAAAnB,EAAAW,GAAA,IAAAzB,EAAAiC,KAAAL,qBAAAc,EAAAT,EAAAS,EAAAR,EAAAxB,OAAAY,OAAAtB,EAAA4B,WAAAvB,EAAA,IAAAsC,EAAAlB,GAAA,WAAAhB,EAAAyB,EAAA,WAAAjB,MAAA2B,EAAA1B,EAAAJ,EAAAT,KAAA6B,EAAA,SAAAW,EAAA3B,EAAAe,EAAAnB,GAAA,WAAAgC,KAAA,SAAAC,IAAA7B,EAAAf,KAAA8B,EAAAnB,IAAA,MAAAI,GAAA,OAAA4B,KAAA,QAAAC,IAAA7B,IAAAe,EAAAQ,OAAA,IAAAO,EAAA,iBAAAC,EAAA,YAAAlB,EAAA,YAAAmB,EAAA,YAAAR,KAAA,SAAAS,KAAA,SAAAC,KAAA,IAAAtB,EAAA,GAAAQ,EAAAR,EAAAI,GAAA,8BAAA5B,EAAAI,OAAA2C,eAAAC,EAAAhD,OAAAiD,EAAA,MAAAD,OAAAxC,GAAAW,EAAAtB,KAAAmD,EAAApB,KAAAJ,EAAAwB,GAAA,IAAAE,EAAAJ,EAAAxB,UAAAc,EAAAd,UAAAlB,OAAAY,OAAAQ,GAAA,SAAA2B,EAAAvC,GAAA,0BAAAwC,SAAA,SAAAzB,GAAAK,EAAApB,EAAAe,GAAA,SAAAf,GAAA,YAAAyC,QAAA1B,EAAAf,SAAA,SAAA0C,EAAA1C,EAAAe,GAAA,SAAA4B,EAAA/C,EAAAL,EAAAT,EAAAkC,GAAA,IAAA7B,EAAAwC,EAAA3B,EAAAJ,GAAAI,EAAAT,GAAA,aAAAJ,EAAAyC,KAAA,KAAAT,EAAAhC,EAAA0C,IAAAC,EAAAX,EAAApB,MAAA,OAAA+B,GAAA,UAAAc,EAAAd,IAAAvB,EAAAtB,KAAA6C,EAAA,WAAAf,EAAA8B,QAAAf,EAAAgB,SAAAC,MAAA,SAAA/C,GAAA2C,EAAA,OAAA3C,EAAAlB,EAAAkC,MAAA,SAAAhB,GAAA2C,EAAA,QAAA3C,EAAAlB,EAAAkC,MAAAD,EAAA8B,QAAAf,GAAAiB,MAAA,SAAA/C,GAAAmB,EAAApB,MAAAC,EAAAlB,EAAAqC,MAAA,SAAAnB,GAAA,OAAA2C,EAAA,QAAA3C,EAAAlB,EAAAkC,QAAA7B,EAAA0C,KAAA,IAAAjC,EAAAL,EAAA,gBAAAQ,MAAA,SAAAC,EAAAO,GAAA,SAAAyC,IAAA,WAAAjC,GAAA,SAAAA,EAAAnB,GAAA+C,EAAA3C,EAAAO,EAAAQ,EAAAnB,MAAA,OAAAA,MAAAmD,KAAAC,YAAA,SAAAtB,EAAAX,EAAAnB,EAAAW,GAAA,IAAAhB,EAAAuC,EAAA,gBAAAhD,EAAAkC,GAAA,GAAAzB,IAAAwC,EAAA,UAAAkB,MAAA,mCAAA1D,IAAAsB,EAAA,cAAA/B,EAAA,MAAAkC,EAAA,OAAAjB,MAAAC,EAAAkD,MAAA,OAAA3C,EAAA4C,OAAArE,EAAAyB,EAAAsB,IAAAb,IAAA,KAAA7B,EAAAoB,EAAA6C,SAAA,GAAAjE,EAAA,KAAAgC,EAAAkC,EAAAlE,EAAAoB,GAAA,GAAAY,EAAA,IAAAA,IAAAa,EAAA,gBAAAb,GAAA,YAAAZ,EAAA4C,OAAA5C,EAAA+C,KAAA/C,EAAAgD,MAAAhD,EAAAsB,SAAA,aAAAtB,EAAA4C,OAAA,IAAA5D,IAAAuC,EAAA,MAAAvC,EAAAsB,EAAAN,EAAAsB,IAAAtB,EAAAiD,kBAAAjD,EAAAsB,SAAA,WAAAtB,EAAA4C,QAAA5C,EAAAkD,OAAA,SAAAlD,EAAAsB,KAAAtC,EAAAwC,EAAA,IAAAnB,EAAAe,EAAAZ,EAAAnB,EAAAW,GAAA,cAAAK,EAAAgB,KAAA,IAAArC,EAAAgB,EAAA2C,KAAArC,EAAA,iBAAAD,EAAAiB,MAAAG,EAAA,gBAAAjC,MAAAa,EAAAiB,IAAAqB,KAAA3C,EAAA2C,MAAA,UAAAtC,EAAAgB,OAAArC,EAAAsB,EAAAN,EAAA4C,OAAA,QAAA5C,EAAAsB,IAAAjB,EAAAiB,OAAA,SAAAwB,EAAAtC,EAAAnB,GAAA,IAAAW,EAAAX,EAAAuD,OAAA5D,EAAAwB,EAAAE,SAAAV,GAAA,GAAAhB,IAAAS,EAAA,OAAAJ,EAAAwD,SAAA,eAAA7C,GAAAQ,EAAAE,SAAA,SAAArB,EAAAuD,OAAA,SAAAvD,EAAAiC,IAAA7B,EAAAqD,EAAAtC,EAAAnB,GAAA,UAAAA,EAAAuD,SAAA,WAAA5C,IAAAX,EAAAuD,OAAA,QAAAvD,EAAAiC,IAAA,IAAA6B,UAAA,oCAAAnD,EAAA,aAAAyB,EAAA,IAAAlD,EAAA6C,EAAApC,EAAAwB,EAAAE,SAAArB,EAAAiC,KAAA,aAAA/C,EAAA8C,KAAA,OAAAhC,EAAAuD,OAAA,QAAAvD,EAAAiC,IAAA/C,EAAA+C,IAAAjC,EAAAwD,SAAA,KAAApB,EAAA,IAAAhB,EAAAlC,EAAA+C,IAAA,OAAAb,IAAAkC,MAAAtD,EAAAmB,EAAA4C,YAAA3C,EAAAjB,MAAAH,EAAAgE,KAAA7C,EAAA8C,QAAA,WAAAjE,EAAAuD,SAAAvD,EAAAuD,OAAA,OAAAvD,EAAAiC,IAAA7B,GAAAJ,EAAAwD,SAAA,KAAApB,GAAAhB,GAAApB,EAAAuD,OAAA,QAAAvD,EAAAiC,IAAA,IAAA6B,UAAA,oCAAA9D,EAAAwD,SAAA,KAAApB,GAAA,SAAA8B,EAAA9D,GAAA,IAAAe,EAAA,CAAAgD,OAAA/D,EAAA,SAAAA,IAAAe,EAAAiD,SAAAhE,EAAA,SAAAA,IAAAe,EAAAkD,WAAAjE,EAAA,GAAAe,EAAAmD,SAAAlE,EAAA,SAAAmE,WAAAC,KAAArD,GAAA,SAAAsD,EAAArE,GAAA,IAAAe,EAAAf,EAAAsE,YAAA,GAAAvD,EAAAa,KAAA,gBAAAb,EAAAc,IAAA7B,EAAAsE,WAAAvD,EAAA,SAAAU,EAAAzB,GAAA,KAAAmE,WAAA,EAAAJ,OAAA,SAAA/D,EAAAwC,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAAtB,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAnB,EAAAmB,EAAAC,GAAA,GAAApB,EAAA,OAAAA,EAAAX,KAAA8B,GAAA,sBAAAA,EAAA6C,KAAA,OAAA7C,EAAA,IAAAyD,MAAAzD,EAAA0D,QAAA,KAAAlF,GAAA,EAAAT,EAAA,SAAA8E,IAAA,OAAArE,EAAAwB,EAAA0D,QAAA,GAAAlE,EAAAtB,KAAA8B,EAAAxB,GAAA,OAAAqE,EAAA7D,MAAAgB,EAAAxB,GAAAqE,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAA7D,MAAAC,EAAA4D,EAAAV,MAAA,EAAAU,GAAA,OAAA9E,EAAA8E,KAAA9E,GAAA,UAAA4E,UAAAd,EAAA7B,GAAA,2BAAAkB,EAAAvB,UAAAwB,EAAA3C,EAAA+C,EAAA,eAAAvC,MAAAmC,EAAAb,cAAA,IAAA9B,EAAA2C,EAAA,eAAAnC,MAAAkC,EAAAZ,cAAA,IAAAY,EAAAyC,YAAAtD,EAAAc,EAAAf,EAAA,qBAAAJ,EAAA4D,oBAAA,SAAA3E,GAAA,IAAAe,EAAA,mBAAAf,KAAA4E,YAAA,QAAA7D,QAAAkB,GAAA,uBAAAlB,EAAA2D,aAAA3D,EAAA1B,QAAA0B,EAAA8D,KAAA,SAAA7E,GAAA,OAAAR,OAAAsF,eAAAtF,OAAAsF,eAAA9E,EAAAkC,IAAAlC,EAAA+E,UAAA7C,EAAAd,EAAApB,EAAAmB,EAAA,sBAAAnB,EAAAU,UAAAlB,OAAAY,OAAAkC,GAAAtC,GAAAe,EAAAiE,MAAA,SAAAhF,GAAA,OAAA8C,QAAA9C,IAAAuC,EAAAG,EAAAhC,WAAAU,EAAAsB,EAAAhC,UAAAvB,GAAA,0BAAA4B,EAAA2B,gBAAA3B,EAAAkE,MAAA,SAAAjF,EAAAJ,EAAAW,EAAAhB,EAAAT,QAAA,IAAAA,MAAAoG,SAAA,IAAAlE,EAAA,IAAA0B,EAAAnB,EAAAvB,EAAAJ,EAAAW,EAAAhB,GAAAT,GAAA,OAAAiC,EAAA4D,oBAAA/E,GAAAoB,IAAA4C,OAAAb,MAAA,SAAA/C,GAAA,OAAAA,EAAAkD,KAAAlD,EAAAD,MAAAiB,EAAA4C,WAAArB,EAAAD,GAAAlB,EAAAkB,EAAAnB,EAAA,aAAAC,EAAAkB,EAAAtB,GAAA,0BAAAI,EAAAkB,EAAA,qDAAAvB,EAAAoE,KAAA,SAAAnF,GAAA,IAAAe,EAAAvB,OAAAQ,GAAAJ,EAAA,WAAAW,KAAAQ,EAAAnB,EAAAwE,KAAA7D,GAAA,OAAAX,EAAAwF,UAAA,SAAAxB,IAAA,KAAAhE,EAAA6E,QAAA,KAAAzE,EAAAJ,EAAAyF,MAAA,GAAArF,KAAAe,EAAA,OAAA6C,EAAA7D,MAAAC,EAAA4D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAV,MAAA,EAAAU,IAAA7C,EAAAsB,SAAAZ,EAAAf,UAAA,CAAAkE,YAAAnD,EAAA8C,MAAA,SAAAxD,GAAA,QAAAuE,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAAvD,EAAA,KAAAkD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAtB,IAAA7B,EAAA,KAAAmE,WAAA3B,QAAA6B,IAAAtD,EAAA,QAAAnB,KAAA,WAAAA,EAAA2F,OAAA,IAAAhF,EAAAtB,KAAA,KAAAW,KAAA4E,OAAA5E,EAAA4F,MAAA,WAAA5F,GAAAI,IAAAyF,KAAA,gBAAAvC,MAAA,MAAAlD,EAAA,KAAAmE,WAAA,GAAAG,WAAA,aAAAtE,EAAA4B,KAAA,MAAA5B,EAAA6B,IAAA,YAAA6D,MAAAlC,kBAAA,SAAAzC,GAAA,QAAAmC,KAAA,MAAAnC,EAAA,IAAAnB,EAAA,cAAA+F,EAAApF,EAAAhB,GAAA,OAAAyB,EAAAY,KAAA,QAAAZ,EAAAa,IAAAd,EAAAnB,EAAAgE,KAAArD,EAAAhB,IAAAK,EAAAuD,OAAA,OAAAvD,EAAAiC,IAAA7B,KAAAT,EAAA,QAAAA,EAAA,KAAA4E,WAAAM,OAAA,EAAAlF,GAAA,IAAAA,EAAA,KAAAT,EAAA,KAAAqF,WAAA5E,GAAAyB,EAAAlC,EAAAwF,WAAA,YAAAxF,EAAAiF,OAAA,OAAA4B,EAAA,UAAA7G,EAAAiF,QAAA,KAAAuB,KAAA,KAAAnG,EAAAoB,EAAAtB,KAAAH,EAAA,YAAAqC,EAAAZ,EAAAtB,KAAAH,EAAA,iBAAAK,GAAAgC,EAAA,SAAAmE,KAAAxG,EAAAkF,SAAA,OAAA2B,EAAA7G,EAAAkF,UAAA,WAAAsB,KAAAxG,EAAAmF,WAAA,OAAA0B,EAAA7G,EAAAmF,iBAAA,GAAA9E,GAAA,QAAAmG,KAAAxG,EAAAkF,SAAA,OAAA2B,EAAA7G,EAAAkF,UAAA,YAAA7C,EAAA,UAAA8B,MAAA,kDAAAqC,KAAAxG,EAAAmF,WAAA,OAAA0B,EAAA7G,EAAAmF,gBAAAR,OAAA,SAAAzD,EAAAe,GAAA,QAAAnB,EAAA,KAAAuE,WAAAM,OAAA,EAAA7E,GAAA,IAAAA,EAAA,KAAAL,EAAA,KAAA4E,WAAAvE,GAAA,GAAAL,EAAAwE,QAAA,KAAAuB,MAAA/E,EAAAtB,KAAAM,EAAA,oBAAA+F,KAAA/F,EAAA0E,WAAA,KAAAnF,EAAAS,EAAA,OAAAT,IAAA,UAAAkB,GAAA,aAAAA,IAAAlB,EAAAiF,QAAAhD,MAAAjC,EAAAmF,aAAAnF,EAAA,UAAAkC,EAAAlC,IAAAwF,WAAA,UAAAtD,EAAAY,KAAA5B,EAAAgB,EAAAa,IAAAd,EAAAjC,GAAA,KAAAqE,OAAA,YAAAS,KAAA9E,EAAAmF,WAAAjC,GAAA,KAAA4D,SAAA5E,IAAA4E,SAAA,SAAA5F,EAAAe,GAAA,aAAAf,EAAA4B,KAAA,MAAA5B,EAAA6B,IAAA,gBAAA7B,EAAA4B,MAAA,aAAA5B,EAAA4B,KAAA,KAAAgC,KAAA5D,EAAA6B,IAAA,WAAA7B,EAAA4B,MAAA,KAAA8D,KAAA,KAAA7D,IAAA7B,EAAA6B,IAAA,KAAAsB,OAAA,cAAAS,KAAA,kBAAA5D,EAAA4B,MAAAb,IAAA,KAAA6C,KAAA7C,GAAAiB,GAAA6D,OAAA,SAAA7F,GAAA,QAAAe,EAAA,KAAAoD,WAAAM,OAAA,EAAA1D,GAAA,IAAAA,EAAA,KAAAnB,EAAA,KAAAuE,WAAApD,GAAA,GAAAnB,EAAAqE,aAAAjE,EAAA,YAAA4F,SAAAhG,EAAA0E,WAAA1E,EAAAsE,UAAAG,EAAAzE,GAAAoC,IAAA,eAAAhC,GAAA,QAAAe,EAAA,KAAAoD,WAAAM,OAAA,EAAA1D,GAAA,IAAAA,EAAA,KAAAnB,EAAA,KAAAuE,WAAApD,GAAA,GAAAnB,EAAAmE,SAAA/D,EAAA,KAAAO,EAAAX,EAAA0E,WAAA,aAAA/D,EAAAqB,KAAA,KAAArC,EAAAgB,EAAAsB,IAAAwC,EAAAzE,GAAA,OAAAL,GAAA,UAAA0D,MAAA,0BAAA6C,cAAA,SAAA/E,EAAAnB,EAAAW,GAAA,YAAA6C,SAAA,CAAAnC,SAAAoB,EAAAtB,GAAA4C,WAAA/D,EAAAiE,QAAAtD,GAAA,cAAA4C,SAAA,KAAAtB,IAAA7B,GAAAgC,IAAAjB,EAAA,SAAAgF,EAAAC,EAAAnD,EAAAoD,EAAAC,EAAAC,EAAA9F,EAAAwB,GAAA,QAAAuE,EAAAJ,EAAA3F,GAAAwB,GAAA9B,EAAAqG,EAAArG,MAAA,MAAAsG,GAAA,YAAAJ,EAAAI,GAAAD,EAAAlD,KAAAL,EAAA9C,GAAAmF,QAAArC,QAAA9C,GAAAgD,KAAAmD,EAAAC,GAAA,SAAAG,EAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAAC,UAAA,WAAAxB,SAAA,SAAArC,EAAAoD,GAAA,IAAAD,EAAAO,EAAAI,MAAAH,EAAAC,GAAA,SAAAP,EAAAnG,GAAAgG,EAAAC,EAAAnD,EAAAoD,EAAAC,EAAAC,EAAA,OAAApG,GAAA,SAAAoG,EAAAS,GAAAb,EAAAC,EAAAnD,EAAAoD,EAAAC,EAAAC,EAAA,QAAAS,GAAAV,OAAAW,OADA,IAmBIC,EACAC,EApBEC,EAASC,GAAG,2CAA4C,IAC1DC,EAAO,KAELC,EAAO,IAAIC,KAAK,CAClBC,WAAW,EACXC,SAAS,IAKTC,EAAgB,KAChBC,EAAgB,KAGhBC,EAAiB,KACjBC,EAAqB,KACrBC,EAAmB,KAOnBC,GAAe,EAGbC,EAAkB,GAEpBC,EAAiBC,SAASC,eAAe,oBACzCC,EAAYF,SAASC,eAAe,aAGlCE,EAAmBH,SAASI,cAAc,sBAC1CC,EAAoBL,SAASI,cAAc,sBAC3CE,EAAcN,SAASI,cAAc,sBACrCG,EAAY,CAACJ,EAAkBE,EAAmBC,GAOxD,SAASE,EAAWC,GAEhB,IAAMnG,EAASiG,EAAUG,KAAI,SAAAC,GAAM,OAAIA,EAAO3I,SAC9CuI,EAAU9F,SAAQ,SAAAkG,GACd,KAAOA,EAAOC,YACVD,EAAOE,YAAYF,EAAOC,eAGlC,IAAK,IAAI7J,EAAI,EAAGA,IAAM0J,EAAY/D,SAAU3F,EAAG,CAC3C,IAAM+J,EAAaL,EAAY1J,GACzBgK,EAASf,SAASgB,cAAc,UACtCD,EAAO/I,MAAQ8I,EAAWG,SAEF,eAApBH,EAAWI,MACXH,EAAOI,KAAOL,EAAWM,OAAS,cAAJC,OAAkBlB,EAAiBzD,OAAS,GAC1EyD,EAAiBmB,YAAYP,IACF,gBAApBD,EAAWI,MAClBH,EAAOI,KAAOL,EAAWM,OAAS,WAAJC,OAAehB,EAAkB3D,OAAS,GACxE2D,EAAkBiB,YAAYP,IACH,eAApBD,EAAWI,OAClBH,EAAOI,KAAOL,EAAWM,OAAS,UAAJC,OAAcf,EAAY5D,OAAS,GACjE4D,EAAYgB,YAAYP,IAKhCR,EAAU9F,SAAQ,SAACkG,EAAQY,GACnBC,MAAM7I,UAAU8E,MAAMvG,KAAKyJ,EAAOc,YAAYC,MAAK,SAAAlJ,GAAC,OAAIA,EAAER,QAAUsC,EAAOiH,QAC3EZ,EAAO3I,MAAQsC,EAAOiH,OAQlC,SAASI,EAAaC,EAASC,GAG3BD,EAAQE,OAAQ,OAEc,IAAnBF,EAAQC,OACfD,EAAQG,UAAUF,GACb7G,MAAK,eAEJ,OACK,SAAAsD,GACH,IAAI0D,EAAe1D,EACA,kBAAfA,EAAMhH,OACN0K,EAAe,4DAAHX,OAA+D/C,IAE/E2D,QAAQ3D,MAAM0D,GAEd3B,EAAkB6B,cAAgB,KAG1CD,QAAQE,KAAK,qDA0BrB,SAASC,EAAY9D,GAOjB+D,KAAO,CACH,GAAMlD,EACN,KAAQmD,KACR,OAAUC,QAGdC,GAXY,GACA,EAUQH,MA0BxB,SAASI,EAASC,EAAOC,GACrBD,EAAME,UAAYD,EAClBD,EAAMG,iBAAiB,kBAAkB,WACrCH,EAAMI,UAEV5C,EAAU6C,OAAOL,GAGrB,SAASM,EAASC,EAAON,GACrBM,EAAML,UAAYD,EAClBM,EAAMJ,iBAAiB,kBAAkB,WACrCI,EAAMH,UAEV5C,EAAU6C,OAAOE,GAIrB,SAASC,EAAgBC,EAAaF,EAAON,GACzCM,EAAML,UAAYD,EAClBM,EAAMJ,iBAAiB,kBAAkB,WACrCI,EAAMH,UAGV,IAAIM,EAAmBpD,SAASC,eAAekD,GAC3CC,GACAA,EAAiBL,OAAOE,GAYhC,SAASI,EAAgBC,GACrB,IAAIC,EAAKvD,SAASC,eAAeqD,GAC7BC,IACAA,EAAGC,MAAMC,QAAU,QAI3B,SAASC,EAAkBC,GACvB,IAAI/B,EAAU5B,SAASC,eAAe0D,GAClC/B,GACAA,EAAQgC,SAIhB,SAASC,EAAgBZ,EAAOP,EAAOoB,GAEnCC,UAAUC,aAAaC,aAAaH,GAAa9I,MAAK,SAAC2H,GAoDnD,OAlDAe,EAAkB,WAClBA,EAAkB,WAEL,GAAThB,GAA0B,GAATO,GACjBxD,EAAgB,KAGhBD,EAAgBmD,EAChBuB,OAAOvB,OAASA,GAKhB5D,EAAeiB,SAASgB,cAAc,UACzBmD,aAAa,KAAM,WAChCpF,EAAa+C,OAAQ,EAjFjC,SAAoBmB,EAAON,GACvBM,EAAML,UAAYD,EAClBM,EAAMnB,OAAQ,EAEdmB,EAAMJ,iBAAiB,kBAAkB,WACrCI,EAAMH,UAEV/C,EAAegD,OAAOE,GA4EdmB,CAAWrF,EAAc4D,KAQzBnD,EAAgB,KAChB0E,OAAOvB,OAASA,EAGhBlD,EAAgBkD,GAOhB3D,EAAegB,SAASgB,cAAc,UACzBmD,aAAa,KAAM,WAChCnF,EAAamF,aAAa,WAAY,YAEtCnF,EAAa8C,OAAQ,EArHjC,SAAoBY,EAAOC,GACvBD,EAAME,UAAYD,EAClBD,EAAMZ,OAAQ,EAEdY,EAAMG,iBAAiB,kBAAkB,WACrCH,EAAMI,UAEV/C,EAAegD,OAAOL,GAgHd2B,CAAWrF,EAAc2D,IAQtBoB,UAAUC,aAAaM,sBAG/BtJ,KAAKwF,GAAW,OAAO,SAAC3B,GAEV,GAAToE,GAA0B,GAATP,GAEjBN,OAWZ,SAASI,EAAMS,EAAOP,EAAOL,GAErB6B,OAAOvB,QACPuB,OAAOvB,OAAO4B,YAAY9J,SAAQ,SAAA+J,GAC9BA,EAAM9G,UAGd,IAAM+G,EAActE,EAAiBnI,MAC/B0M,EAAcpE,EAAYtI,MAEhC,GAAa,GAATiL,GAA0B,GAATP,EASjBmB,EAAgBZ,EAAOP,EAPH,CAChBA,MAAO,CAAEzB,SAAUwD,EAAc,CAAEE,MAAOF,QAAgB3F,GAC1DmE,MAAO,CAAEhC,SAAUyD,EAAc,CAAEC,MAAOD,QAAgB5F,UAO3D,GAAa,GAATmE,GAA2B,GAATP,EAAe,CAQxCmB,EAAgBZ,EAAOP,EANH,CAChBA,MAAO,CAAEzB,SAAUwD,EAAc,CAAEE,MAAOF,QAAgB3F,GAC1DmE,OAAO,KAanB,SAAS2B,IAEDV,OAAOvB,QACPuB,OAAOvB,OAAO4B,YAAY9J,SAAQ,SAAA+J,GAC9BA,EAAM9G,UAId,IAAM+G,EAActE,EAAiBnI,MAC/B0M,EAAcpE,EAAYtI,MAC1B8L,EAAc,CAChBpB,MAAO,CAAEzB,SAAUwD,EAAc,CAAEE,MAAOF,QAAgB3F,GAC1DmE,MAAO,CAAEhC,SAAUyD,EAAc,CAAEC,MAAOD,QAAgB5F,IAE9DiF,UAAUC,aAAaC,aAAaH,GAAa9I,MAAK,SAAC2H,GACnDuB,OAAOvB,OAASA,EAChB5D,EAAa6D,UAAYD,EAMzBnD,EAAgBmD,EAEhBN,KAAO,CACH,GAAMlD,EACN,KAAQmD,KACR,OAAUC,OACV,YAAe/C,GAKnBP,EAAO4F,KAAK,cAAexC,MAE3BqB,EAAkBvE,MAGpB,MAAOiD,GAOb,SAAS0C,IACL7C,QAAQ8C,IAAI,iBAEZ,IAAIC,EAAchF,SAASC,eAAe,eAEtC+E,IACAA,EAAYxB,MAAMC,QAAU,SAGhCwB,IAGJ,SAASA,IACiBjF,SAASC,eAAe,eAWlD,WAEI,IAAMiF,EAAYlF,SAASC,eAAe,yBAE1C,GAAIiF,EAAW,CAEX,IAAMC,EAASD,EAAUE,WAGnBC,EAAerF,SAASgB,cAAc,OAC5CqE,EAAa1B,GAAK,wBAGlB0B,EAAaC,YAAc,GAG3BH,EAAOI,aAAaF,EAAcH,GAGlCA,EAAUtB,UA5BV4B,IAEAvD,QAAQ8C,IAAI,0CAEOU,WAAWR,EAA2B,MA6HjE,SAASS,IAEL3B,UAAUC,aAAa2B,gBAAgB,CACnC1C,OAAO,EACPP,OAAO,IACR1H,MAAK,SAAC4K,GAEL/F,EAAe+F,EAGf,IAAMC,EAAY7F,SAASgB,cAAc,SACzC6E,EAAU1B,aAAa,KAAM,eAC7B0B,EAAU/D,OAAQ,EAGlBoB,EAAgB,wBAAyB2C,EAAWD,GAGpDvC,EAAgB,eAGhB5L,OAAO2F,KAAK0C,GAAiBrF,SAAQ,SAASqL,GAE1C,IAAIC,EAAO3G,EAAK4G,QAAQF,GACxBC,EAAKE,GAAG,QAAQ,WAIZ,IAAI5D,EAAO,CACH,GAAMyD,EACN,cAAgB,GAGxBC,EAAKG,KAAK7D,GACUjD,EAAKlI,KAAK4O,EAAQjG,SAM9CA,EAAasG,iBAAiB,GAAGC,QAAU,WAxWnD,IAAyB9C,EACjBC,EADiBD,EAyWG,eAxWpBC,EAAKvD,SAASC,eAAeqD,MAE7BC,EAAGC,MAAMC,QAAU,SAuWfzD,SAASC,eAAe,eAAe2D,SAEvCnM,OAAO2F,KAAK0C,GAAiBrF,SAAQ,SAASqL,GAC1C,IAAIC,EAAO3G,EAAK4G,QAAQF,GACxBC,EAAKE,GAAG,QAAQ,WAIZ,IAAI5D,EAAO,CACP,GAAMyD,EACN,cAAgB,GAEpBC,EAAKG,KAAK7D,aA+jB9B,SAASgE,IAI0B,SAHdrG,SAASI,cAAc,mBAG3BoD,MAAMC,UAEfxB,QAAQ8C,IAAI,+CAMlBnF,EAAiB0G,iBAAiB7L,SAAQ,SAAC+J,GACzCA,EAAM+B,SAAW/B,EAAM+B,YAwC3B,SAASC,IAE2B,SADdxG,SAASI,cAAc,mBAC3BoD,MAAMC,UAChBxB,QAAQ8C,IAAI,iDAMhBnF,EAAiBuG,iBAAiB1L,SAAQ,SAAC+J,GACzCA,EAAM+B,SAAW/B,EAAM+B,YAhpC7BlG,EAAkBoG,WAAa,WAAYC,iBAAiB/N,WAE5DoL,UAAUC,aAAaM,mBAAmBtJ,KAAKwF,GAAW,MAAO4B,GA8hBjEjC,EAAiBwG,SAAW/B,EAC5BvE,EAAkBsG,SAhelB,WACI,IAAMC,EAAmBvG,EAAkBrI,MAIvC2J,EADAnC,EACaT,EAEAC,EAFc4H,IA4dnCtG,EAAYqG,SAAW/B,EAKvBxF,EAAK6G,GAAG,cAAc,SAASF,GAE3BA,EAAKE,GAAG,QAAQ,SAAS5D,GAIrB,GAFAJ,QAAQ8C,IAAI,mCAAoC1C,GAEvB,GAArBA,EAAKxC,aAELA,GAAe,MAEZ,IAAyB,GAArBwC,EAAKxC,aAKZ,OAHAoC,QAAQ8C,IAAI,6BACZD,IACAjF,GAAe,GACR,EAGPgH,MAAM,uBAKdd,EAAKE,GAAG,SAAS,SAACF,GACd9D,QAAQ8C,IAAI,kDAAmDgB,GAE/D,IAAMe,EAAc9G,SAASC,eAAe,eAGxC6G,EAEFA,EAAYlD,SAEZ3B,QAAQ8C,IAAI,kDAOtB3F,EAAK6G,GAAG,QAAQ,SAACtC,GAMbxE,EAAOwE,EAEPtB,KAAO,CACH,GAAMsB,EACN,KAAQrB,KACR,OAAUC,QAGdtD,EAAO4F,KAAK,UAAWxC,MAQvBG,GALY,GACA,EAIQH,SAMxBjD,EAAK6G,GAAG,QAAQ,SAAA/O,GAEZ,IAAI6P,EAAM,EAIJtC,EAActE,EAAiBnI,MAC/B0M,EAAcpE,EAAYtI,MAC1B8L,EAAc,CAChBpB,MAAO,CAAEzB,SAAUwD,EAAc,CAAEE,MAAOF,QAAgB3F,GAC1DmE,MAAO,CAAEhC,SAAUyD,EAAc,CAAEC,MAAOD,QAAgB5F,IAG9DiF,UAAUC,aAAaC,aAAaH,GAAa9I,MAAK,SAAC2H,GAEnDjD,EAAiBiD,EAEqB,GAAlCA,EAAO2D,iBAAiB5J,QAAeiG,EAAOwD,iBAAiBzJ,OAMnExF,EAAK8P,OAAOrE,GAEZzL,EAAK+O,GAAG,UAAU,SAACL,GASf,GAPAjG,EAAqBiG,EAGrB9F,EAAgB5I,EAAKkI,MAAQlI,EAIlB,GAAP6P,EAAU,CAEV,GAAoB,GAAhBlH,EAWA,OAVAgG,UAAY7F,SAASgB,cAAc,SACnC6E,UAAU1B,aAAa,KAAM,eAI7BjB,EAAgB,wBAAyB2C,UAAWD,GAGpDvC,EAAgB,gBAET,EAG+B,GAAtCuC,EAAWU,iBAAiB5J,QAAqD,GAAtCkJ,EAAWO,iBAAiBzJ,QAIvEgH,EAAkBxM,EAAKkI,MACvB6H,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAMjN,EAAKkI,MACtC6H,cAAc9C,aAAa,QAAS,qBACpC8C,cAAcnF,OAAQ,EAEtBkB,EAASiE,cAAerB,KAMxBlC,EAAkBxM,EAAKkI,MACvB6H,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAMjN,EAAKkI,MACtC6H,cAAc9C,aAAa,QAAS,qBACpC8C,cAAc9C,aAAa,WAAY,YACvC8C,cAAcnF,OAAQ,EAEtBW,EAASwE,cAAerB,IAIhCmB,OAGJ7P,EAAK+O,GAAG,SAAS,WACbvC,EAAkBxM,EAAKkI,YAI7B,OAAO,SAACd,GAMN,IAAMmG,EAActE,EAAiBnI,MAC/B8L,EAAc,CAChBpB,MAAO,CAAEzB,SAAUwD,EAAc,CAAEE,MAAOF,QAAgB3F,GAC1DmE,OAAO,GAGXc,UAAUC,aAAaC,aAAaH,GAAa9I,MAAK,SAAC2H,GAEnDjD,EAAiBiD,EACqB,GAAlCA,EAAO2D,iBAAiB5J,QAAeiG,EAAOwD,iBAAiBzJ,OAMnExF,EAAK8P,OAAOrE,GAEZzL,EAAK+O,GAAG,UAAU,SAACL,GAKf,GAHAjG,EAAqBiG,EACrB9F,EAAgB5I,EAAKkI,MAAQlI,EAElB,GAAP6P,EAAU,CAGV,GAAoB,GAAhBlH,EAUA,OATAgG,UAAY7F,SAASgB,cAAc,SACnC6E,UAAU1B,aAAa,KAAM,eAG7BjB,EAAgB,wBAAyB2C,UAAWD,GAGpDvC,EAAgB,gBAET,EAG+B,GAAtCuC,EAAWU,iBAAiB5J,QAAqD,GAAtCkJ,EAAWO,iBAAiBzJ,QAIvEgH,EAAkBxM,EAAKkI,MACvB6H,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAMjN,EAAKkI,MACtC6H,cAAc9C,aAAa,QAAS,qBACpC8C,cAAcnF,OAAQ,EAEtBkB,EAASiE,cAAerB,KAIxBlC,EAAkBxM,EAAKkI,MACvB6H,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAMjN,EAAKkI,MACtC6H,cAAc9C,aAAa,QAAS,qBACpC8C,cAAc9C,aAAa,WAAY,YACvC8C,cAAcnF,OAAQ,EACtBW,EAASwE,cAAerB,IAIhCmB,OAGJ7P,EAAK+O,GAAG,SAAS,WACbvC,EAAkBxM,EAAKkI,YAI7B,OAAO,SAACd,aAMlBc,EAAK6G,GAAG,SAAS,SAACtC,GACd3D,SAASC,eAAe0D,GAAIC,YAIhC3E,EAAOgH,GAAG,cAAc,SAAC5D,GAGrBvC,EAAgBuC,EAAKsB,IAAMtB,EAE3BJ,QAAQ8C,IAAI,8DAA+D1C,EAAKsB,IAEhF,IAAMc,EAActE,EAAiBnI,MAC/B0M,EAAcpE,EAAYtI,MAC1B8L,EAAc,CAChBpB,MAAO,CAAEzB,SAAUwD,EAAc,CAAEE,MAAOF,QAAgB3F,GAC1DmE,MAAO,CAAEhC,SAAUyD,EAAc,CAAEC,MAAOD,QAAgB5F,IAG9DiF,UAAUC,aAAaC,aAAaH,GAAa9I,MAAK,SAACkM,GAQnD,GAJAtH,EAAmBsH,EAEnBC,SAAW/H,EAAKlI,KAAKmL,EAAKsB,GAAIuD,GAE1BC,SAAU,CAEVrH,EAAgBqH,SAAS/H,MAAQ+H,SAEjC,IAAIJ,EAAM,EAEVI,SAASlB,GAAG,UAAU,SAACL,GAER,GAAPmB,IAE0C,GAAtCnB,EAAWU,iBAAiB5J,QAAqD,GAAtCkJ,EAAWO,iBAAiBzJ,QAEvEgH,EAAkBrB,EAAKsB,IAEvBsD,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAM9B,EAAKsB,IACtCsD,cAAc9C,aAAa,QAAS,8BACpC8C,cAAcnF,OAAQ,EAEtBkB,EAASiE,cAAerB,KAIxBlC,EAAkBrB,EAAKsB,IAEvBsD,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAM9B,EAAKsB,IACtCsD,cAAc9C,aAAa,QAAS,8BACpC8C,cAAc9C,aAAa,WAAY,YACvC8C,cAAcnF,OAAQ,EAEtBW,EAASwE,cAAerB,KAKhCmB,OAGJI,SAASlB,GAAG,SAAS,WACjBvC,EAAkBrB,EAAKsB,OAG3BwD,SAASlB,GAAG,SAAS,SAACpH,OAO1B2H,IACAH,OAEF,OAAO,SAAC/H,GAMN,IAAM8I,EAAmB,CACrB1E,MAAO,CAAEzB,SAAUwD,EAAc,CAAEE,MAAOF,QAAgB3F,GAC1DmE,OAAO,GAGXc,UAAUC,aAAaC,aAAamD,GAAkBpM,MAAK,SAACqM,GAsBxD,GArBAzH,EAAmByH,EAGf7H,EACA2H,SAAW/H,EAAKlI,KAAKmL,EAAKsB,GAAI0D,IAE9BhF,EAAO,CACH,GAAMlD,EACN,KAAQmD,KACR,OAAUC,OACV,YAAe8E,GAGnBpI,EAAO4F,KAAK,cAAexC,GAG3B8E,SAAW,MAKXA,SAAU,CAEVrH,EAAgBqH,SAAS/H,MAAQ+H,SACjC,IAAIJ,EAAM,EACVI,SAASlB,GAAG,UAAU,SAACL,GACR,GAAPmB,IAE0C,GAAtCnB,EAAWU,iBAAiB5J,QAAqD,GAAtCkJ,EAAWO,iBAAiBzJ,QAGvEuK,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAM9B,EAAKsB,IACtCsD,cAAc9C,aAAa,QAAS,8BACpC8C,cAAcnF,OAAQ,EACtBkB,EAASiE,cAAerB,KAGxBlC,EAAkBrB,EAAKsB,IACvBsD,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAM9B,EAAKsB,IACtCsD,cAAc9C,aAAa,QAAS,8BACpC8C,cAAc9C,aAAa,WAAY,YACvC8C,cAAcnF,OAAQ,EACtBW,EAASwE,cAAerB,KAGhCmB,OAGJI,SAASlB,GAAG,SAAS,WACjBvC,EAAkBrB,EAAKsB,OAG3BwD,SAASlB,GAAG,SAAS,SAACpH,OAItBiB,EAAgBuC,EAAKsB,IAAMwD,aAEjC,OAAO,SAAC7I,OAMVkI,IACAH,UAORpH,EAAOgH,GAAG,gBAAgB,SAAC5D,GACvB,IAAMoC,EAActE,EAAiBnI,MAC/B0M,EAAcpE,EAAYtI,MAC1B8L,EAAc,CAChBpB,MAAO,CAAEzB,SAAUwD,EAAc,CAAEE,MAAOF,QAAgB3F,GAC1DmE,MAAO,CAAEhC,SAAUyD,EAAc,CAAEC,MAAOD,QAAgB5F,IAG9DiF,UAAUC,aAAaC,aAAaH,GAAa9I,MAAK,SAAC4K,GAMnD,GAFAuB,SAAW/H,EAAKlI,KAAKmL,EAAKsB,GAAIiC,GAE1BuB,SAAU,CAEV,IAAIJ,EAAM,EAEVI,SAASlB,GAAG,UAAU,SAACL,GAER,GAAPmB,IAI0C,GAAtCnB,EAAWU,iBAAiB5J,QAAqD,GAAtCkJ,EAAWO,iBAAiBzJ,QAEvEgH,EAAkBrB,EAAKsB,IAEvBsD,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAMgD,SAAS/H,MAC1C6H,cAAc9C,aAAa,QAAS,2BACpC8C,cAAcnF,OAAQ,EAEtBkB,EAASiE,cAAerB,KAKxBlC,EAAkBrB,EAAKsB,IACvBsD,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAM9B,EAAKsB,IACtCsD,cAAc9C,aAAa,QAAS,2BACpC8C,cAAc9C,aAAa,WAAY,YACvC8C,cAAcnF,OAAQ,EACtBW,EAASwE,cAAerB,KAGhCmB,OAGJI,SAASlB,GAAG,SAAS,WACjBvC,EAAkBrB,EAAKsB,OAG3BwD,SAASlB,GAAG,SAAS,SAACpH,OAItBiB,EAAgBuC,EAAKsB,IAAMwD,aAIjC,OAAO,SAAC7I,GAEN,IAAM8I,EAAmB,CACrB1E,MAAO,CAAEzB,SAAUwD,EAAc,CAAEE,MAAOF,QAAgB3F,GAC1DmE,OAAO,GAGXc,UAAUC,aAAaC,aAAamD,GAAkBpM,MAAK,SAAC4K,GAQxD,GANAlG,EAAiBkG,EAIjBuB,SAAW/H,EAAKlI,KAAKmL,EAAKsB,GAAIiC,GAE1BuB,SAAU,CAEV,IAAIJ,EAAM,EAEVI,SAASlB,GAAG,UAAU,SAACL,GAEnBjG,EAAqBiG,EAIV,GAAPmB,IAK0C,GAAtCnB,EAAWU,iBAAiB5J,QAAqD,GAAtCkJ,EAAWO,iBAAiBzJ,QAIvEgH,EAAkByD,SAAS/H,MAC3B6H,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAMgD,SAAS/H,MAC1C6H,cAAc9C,aAAa,QAAS,mBACpC8C,cAAcnF,OAAQ,EACtBkB,EAASiE,cAAerB,KAKxBlC,EAAkByD,SAAS/H,MAC3B6H,cAAgBjH,SAASgB,cAAc,SACvCiG,cAAc9C,aAAa,KAAMgD,SAAS/H,MAC1C6H,cAAc9C,aAAa,QAAS,uBACpC8C,cAAc9C,aAAa,WAAY,YACvC8C,cAAcnF,OAAQ,EACtBW,EAASwE,cAAerB,KAKhCmB,OAGJI,SAASlB,GAAG,SAAS,WACjBvC,EAAkBrB,EAAKsB,OAG3BwD,SAASlB,GAAG,SAAS,SAACpH,OAItBiB,EAAgBuC,EAAKsB,IAAMwD,aAIjC,OAAO,SAAC7I,aAUlBW,EAAOgH,GAAG,kBAAkB,SAAAtC,GAExBD,EAAkBC,GAClB,IACI7D,EAAgB6D,GAAI2D,QACtB,MAAOzI,QA6GQmB,SAASC,eAAe,mBAGzCD,SAASC,eAAe,kBAAkB4C,iBAAiB,SAAS,WAChE6C,OAKc1F,SAASC,eAAe,iBAG1CD,SAASC,eAAe,gBAAgB4C,iBAAiB,SAAS,WA9C1C,MAApBjD,GACAA,EAAiBuG,iBAAiB1L,SAAQ,SAAC+J,GACvCA,EAAM+B,SAAW/B,EAAM+B,QAGF,GAAjB/B,EAAM+B,SACNgB,EAAE,2BAA2BC,OAC7BD,EAAE,iCAAiCE,SAEnCF,EAAE,2BAA2BE,OAC7BF,EAAE,iCAAiCC,WAMzB,MAAlB9H,GACAA,EAAeyG,iBAAiB1L,SAAQ,SAAC+J,GACrCA,EAAM+B,SAAW/B,EAAM+B,QAGF,GAAjB/B,EAAM+B,SACNgB,EAAE,2BAA2BC,OAC7BD,EAAE,iCAAiCE,SAEnCF,EAAE,2BAA2BE,OAC7BF,EAAE,iCAAiCC,cAyB9BxH,SAASC,eAAe,gBAGzCD,SAASC,eAAe,eAAe4C,iBAAiB,SAAS,WAxGzC,MAApBjD,GACAA,EAAiB0G,iBAAiB7L,SAAQ,SAAC+J,GACvCA,EAAM+B,SAAW/B,EAAM+B,QAGF,GAAjB/B,EAAM+B,SACNgB,EAAE,8BAA8BC,OAChCD,EAAE,gCAAgCE,SAElCF,EAAE,8BAA8BE,OAChCF,EAAE,gCAAgCC,WAMxB,MAAlB9H,GACAA,EAAe4G,iBAAiB7L,SAAQ,SAAC+J,GACrCA,EAAM+B,SAAW/B,EAAM+B,QAGF,GAAjB/B,EAAM+B,SACNgB,EAAE,8BAA8BC,OAChCD,EAAE,gCAAgCE,SAElCF,EAAE,8BAA8BE,OAChCF,EAAE,gCAAgCC,cA4FlD,IAAME,EAAgB1H,SAASC,eAAe,kBAO9C,SAAS0H,EAAkBT,GACvBA,EAAYf,iBAAiB1L,SAAQ,SAAC+J,GAClCA,EAAM9G,UAId,SAASkK,EAAmBC,GACxBA,EAAYvB,iBAAiB7L,SAAQ,SAAC+J,GAClCA,EAAM9G,UAKd,SAASoK,IACLP,EAAE,gBAAgB3D,SAGS,SAAAmE,IA+B9B,OA/B8BA,EAAAxJ,EAAAxF,IAAA+D,MAA/B,SAAAkL,IAAA,OAAAjP,IAAAS,MAAA,SAAAyO,GAAA,cAAAA,EAAA1K,KAAA0K,EAAApM,MAAA,OACIpE,OAAO2F,KAAK0C,GAAiBrF,SAAQ,SAASqL,GAC1ChG,EAAgBgG,GAAQwB,WAGP,MAAjB9H,IACAmI,EAAkBnI,GAClBoI,EAAmBpI,IAGF,MAAjBC,IACAkI,EAAkBlI,GAClBmI,EAAmBnI,IAGC,MAApBG,IACA+H,EAAkB/H,GAClBgI,EAAmBhI,IAGD,MAAlBF,IACAiI,EAAkBjI,GAClBkI,EAAmBlI,IAGG,MAAtBC,IACAgI,EAAkBhI,GAClBiI,EAAmBjI,IAGvBmI,IAA4B,wBAAAG,EAAAvK,UAAAsK,QAC/BpJ,MAAA,KAAAD,WAtDG+I,GACAA,EAAc7E,iBAAiB,SAAS,WAV5C,IAAmBqF,IAWDR,EAAc1P,MAV5BwH,EAAc8G,iBAAiB7L,SAAQ,SAAA+J,GACnCA,EAAM2D,iBAAiB,CAAED,OAAQA,UA+DzC,IAAME,EAAyBpI,SAASC,eAAe,yBAEnDmI,GACAA,EAAuBvF,iBAAiB,SAAS,YAtCpD,WAE8BkF,EAAAnJ,MAAC,KAADD,WAqCvB0J","file":"/js/webRTC.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","const socket = io('https://rtcserver.esuccess-inc.com:40002', {});\r\nlet myId = null;\r\n\r\nconst peer = new Peer({\r\n    initiator: false,\r\n    trickle: false,\r\n});\r\n\r\n'use strict';\r\n\r\nlet myVideoStream = null;\r\nlet myAudioStream = null;\r\n\r\n//this will determine who calls\r\nlet userCallStream = null;\r\nlet recieverCallStream = null;\r\nlet userJoinedStream = null;\r\n\r\n//Elements\r\nlet videoElement;\r\nlet audioElement;\r\n\r\n//Share Screen\r\nlet sharedScreen = false;\r\nlet checkingInterval = null;\r\n\r\nconst peerConnections = {}\r\n\r\nlet mediaContainer = document.getElementById('myMediaContainer');\r\nlet videoGrid = document.getElementById('videoGrid');\r\n\r\n//Source\r\nconst audioInputSelect = document.querySelector('select#audioSource');\r\nconst audioOutputSelect = document.querySelector('select#audioOutput');\r\nconst videoSelect = document.querySelector('select#videoSource');\r\nconst selectors = [audioInputSelect, audioOutputSelect, videoSelect];\r\n\r\naudioOutputSelect.disabled = !('sinkId' in HTMLMediaElement.prototype);\r\n\r\nnavigator.mediaDevices.enumerateDevices().then(gotDevices).catch(handleError);\r\n\r\n\r\nfunction gotDevices(deviceInfos) {\r\n    // Handles being called several times to update labels. Preserve values.\r\n    const values = selectors.map(select => select.value);\r\n    selectors.forEach(select => {\r\n        while (select.firstChild) {\r\n            select.removeChild(select.firstChild);\r\n        }\r\n    });\r\n    for (let i = 0; i !== deviceInfos.length; ++i) {\r\n        const deviceInfo = deviceInfos[i];\r\n        const option = document.createElement('option');\r\n        option.value = deviceInfo.deviceId;\r\n\r\n        if (deviceInfo.kind === 'audioinput') {\r\n            option.text = deviceInfo.label || `microphone ${audioInputSelect.length + 1}`;\r\n            audioInputSelect.appendChild(option);\r\n        } else if (deviceInfo.kind === 'audiooutput') {\r\n            option.text = deviceInfo.label || `speaker ${audioOutputSelect.length + 1}`;\r\n            audioOutputSelect.appendChild(option);\r\n        } else if (deviceInfo.kind === 'videoinput') {\r\n            option.text = deviceInfo.label || `camera ${videoSelect.length + 1}`;\r\n            videoSelect.appendChild(option);\r\n        } else {\r\n            //console.log('Some other kind of source/device: ', deviceInfo);\r\n        }\r\n    }\r\n    selectors.forEach((select, selectorIndex) => {\r\n        if (Array.prototype.slice.call(select.childNodes).some(n => n.value === values[selectorIndex])) {\r\n            select.value = values[selectorIndex];\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n// Attach audio output device to video element using device/sink ID.\r\nfunction attachSinkId(element, sinkId) {\r\n\r\n    //(mute element, feedback if false)\r\n    element.muted = true;\r\n\r\n    if (typeof element.sinkId !== 'undefined') {\r\n        element.setSinkId(sinkId)\r\n            .then(() => {\r\n                //console.log(`Success, audio output device attached: ${sinkId}`);\r\n            })\r\n            .catch(error => {\r\n                let errorMessage = error;\r\n                if (error.name === 'SecurityError') {\r\n                    errorMessage = `You need to use HTTPS for selecting audio output device: ${error}`;\r\n                }\r\n                console.error(errorMessage);\r\n                // Jump back to first output device in the list as it's the default.\r\n                audioOutputSelect.selectedIndex = 0;\r\n            });\r\n    } else {\r\n        console.warn('Browser does not support output device selection.');\r\n    }\r\n}\r\n\r\nfunction changeAudioDestination() {\r\n    const audioDestination = audioOutputSelect.value;\r\n\r\n\r\n    if (myVideoStream) {\r\n        attachSinkId(videoElement, audioDestination);\r\n    } else {\r\n        attachSinkId(audioElement, audioDestination);\r\n    }\r\n}\r\n\r\nfunction gotStream(stream) {\r\n    window.stream = stream; // make stream available to console\r\n    videoElement.srcObject = stream;\r\n\r\n    //Register the video stream to my Stream\r\n    myVideoStream = stream;\r\n\r\n    // Refresh button list in case labels have become available\r\n    return navigator.mediaDevices.enumerateDevices();\r\n}\r\n\r\nfunction handleError(error) {\r\n    //start a video with audio connection width data of user\r\n    let video = false;\r\n    let audio = true;\r\n\r\n\r\n    //start audio\r\n    data = {\r\n        'id': myId,\r\n        'user': user,\r\n        'roomID': roomID\r\n    }\r\n\r\n    start(video, audio, data);\r\n}\r\n\r\n\r\nfunction addMyAudio(audio, stream) {\r\n    audio.srcObject = stream;\r\n    audio.muted = true;\r\n\r\n    audio.addEventListener('loadedmetadata', () => {\r\n        audio.play()\r\n    })\r\n    mediaContainer.append(audio);\r\n}\r\n\r\n\r\nfunction addMyVideo(video, stream) {\r\n    video.srcObject = stream;\r\n    video.muted = true;\r\n\r\n    video.addEventListener('loadedmetadata', () => {\r\n        video.play()\r\n    })\r\n    mediaContainer.append(video);\r\n}\r\n\r\n\r\nfunction addAudio(audio, stream) {\r\n    audio.srcObject = stream;\r\n    audio.addEventListener('loadedmetadata', () => {\r\n        audio.play()\r\n    })\r\n    videoGrid.append(audio);\r\n}\r\n\r\nfunction addVideo(video, stream) {\r\n    video.srcObject = stream;\r\n    video.addEventListener('loadedmetadata', () => {\r\n        video.play()\r\n    })\r\n    videoGrid.append(video);\r\n}\r\n\r\n\r\nfunction addVideoContent(containerID, video, stream) {\r\n    video.srcObject = stream;\r\n    video.addEventListener('loadedmetadata', () => {\r\n        video.play()\r\n    })\r\n\r\n    let containerElement = document.getElementById(containerID);\r\n    if (containerElement) {\r\n        containerElement.append(video);\r\n    }\r\n}\r\n\r\n\r\nfunction showByElementId(elementID) {\r\n    let el = document.getElementById(elementID);\r\n    if (el) {\r\n        el.style.display = 'block';\r\n    }\r\n}\r\n\r\nfunction hideByElementId(elementID) {\r\n    let el = document.getElementById(elementID);\r\n    if (el) {\r\n        el.style.display = 'none';\r\n    }\r\n}\r\n\r\nfunction removeElementByID(id) {\r\n    let element = document.getElementById(id);\r\n    if (element) {\r\n        element.remove();\r\n    }\r\n}\r\n\r\nfunction createUserMedia(video, audio, constraints) {\r\n\r\n    navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n\r\n        removeElementByID(\"myVideo\");\r\n        removeElementByID(\"myAudio\");\r\n\r\n        if (audio == true && video == true) {\r\n            myAudioStream = null;\r\n\r\n            //Register the video stream to my Stream\r\n            myVideoStream = stream;\r\n            window.stream = stream; // make stream available to console     \r\n            /*******\r\n                (NOTE: THIS SHOULD BE MUTED = TRUE) \r\n            *******/\r\n\r\n            videoElement = document.createElement('video');\r\n            videoElement.setAttribute(\"id\", \"myVideo\");\r\n            videoElement.muted = false;\r\n            //videoElement.muted = true;\r\n            addMyVideo(videoElement, stream);\r\n\r\n\r\n            // detectDesktopShared(stream)\r\n        } else {\r\n\r\n\r\n            //Register the video stream to my Stream\r\n            myVideoStream = null;\r\n            window.stream = stream; // make stream available to console       \r\n\r\n            //add to my audio stream\r\n            myAudioStream = stream;\r\n\r\n            //console.log(\"this is a audio only\")\r\n\r\n            /*******\r\n                (NOTE: THIS SHOULD BE MUTED = TRUE) \r\n            *******/\r\n            audioElement = document.createElement('audio');\r\n            audioElement.setAttribute(\"id\", \"myAudio\");\r\n            audioElement.setAttribute(\"controls\", \"controls\");\r\n            //audioElement.muted = false;\r\n            audioElement.muted = true;\r\n\r\n            addMyAudio(audioElement, stream);\r\n\r\n            // detectDesktopShared(stream)\r\n\r\n\r\n\r\n        }\r\n\r\n        return navigator.mediaDevices.enumerateDevices();\r\n\r\n\r\n    }).then(gotDevices).catch((err) => {\r\n\r\n        if (video == true && audio == true) {\r\n\r\n            handleError(err);\r\n\r\n        } else {\r\n\r\n            //alert(\"no media detected, please connect and try again\")\r\n        }\r\n    });\r\n\r\n\r\n}\r\n\r\nfunction start(video, audio, data) {\r\n\r\n    if (window.stream) {\r\n        window.stream.getTracks().forEach(track => {\r\n            track.stop();\r\n        });\r\n    }\r\n    const audioSource = audioInputSelect.value;\r\n    const videoSource = videoSelect.value;\r\n\r\n    if (video == true && audio == true) {\r\n\r\n        const constraints = {\r\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\r\n            video: { deviceId: videoSource ? { exact: videoSource } : undefined }\r\n        };\r\n\r\n        //console.log(\"connect video : start\")\r\n\r\n        createUserMedia(video, audio, constraints)\r\n\r\n    } else if (video == false && audio == true) {\r\n\r\n        const constraints = {\r\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\r\n            video: false\r\n        };\r\n\r\n        //console.log(\"connect audio : start\")\r\n        createUserMedia(video, audio, constraints)\r\n\r\n    } else {\r\n\r\n        //alert(\"no media detected, please connect and try again\")\r\n    }\r\n\r\n}\r\n\r\nfunction restart() {\r\n\r\n    if (window.stream) {\r\n        window.stream.getTracks().forEach(track => {\r\n            track.stop();\r\n        });\r\n    }\r\n\r\n    const audioSource = audioInputSelect.value;\r\n    const videoSource = videoSelect.value;\r\n    const constraints = {\r\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\r\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\r\n    };\r\n    navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n        window.stream = stream; // make stream available to console\r\n        videoElement.srcObject = stream;\r\n\r\n        //console.log(\"i have muted this\")\r\n        //videoElement.muted = true;\r\n\r\n        //Register the video stream to my Stream\r\n        myVideoStream = stream;\r\n\r\n        data = {\r\n            'id': myId,\r\n            'user': user,\r\n            'roomID': roomID,\r\n            'videoStream': myVideoStream\r\n        }\r\n\r\n\r\n\r\n        socket.emit(\"changeMedia\", data);\r\n\r\n        removeElementByID(myId);\r\n\r\n\r\n    }).catch(handleError);\r\n\r\n}\r\n\r\n\r\n\r\n//user end stop sharing\r\nfunction stopSharing() {\r\n    console.log(\"stopSharing()\")\r\n\r\n    let showElement = document.getElementById(\"lessonSlide\");\r\n\r\n    if (showElement) {\r\n        showElement.style.display = 'block';\r\n    }\r\n\r\n    checkAndRemoveSharedVideo();\r\n}\r\n\r\nfunction checkAndRemoveSharedVideo() {\r\n    const removeElement = document.getElementById(\"sharedVideo\");\r\n    if (removeElement) {\r\n        removeSharedVideo();\r\n    } else {\r\n        console.log(\"rechecking shared video after 1 second\")\r\n        // If not found, wait for a while and then check again\r\n        checkingInterval = setTimeout(checkAndRemoveSharedVideo, 1000); // Wait for 1 second (adjust as needed)\r\n    }\r\n}\r\n\r\n\r\nfunction removeSharedVideo() {\r\n\r\n    const container = document.getElementById(\"lessonSharedContainer\");\r\n\r\n    if (container) {\r\n        // Store the parent element to insert the new container in the same position.\r\n        const parent = container.parentNode;\r\n    \r\n        // Create a new container element.\r\n        const newContainer = document.createElement(\"div\");\r\n        newContainer.id = \"lessonSharedContainer\";\r\n    \r\n        // Add content or attributes to the new container if needed.\r\n        newContainer.textContent = \"\";\r\n    \r\n        // Replace the old container with the new one.\r\n        parent.insertBefore(newContainer, container);\r\n    \r\n        // Remove the old shared video container.\r\n        container.remove();\r\n    }\r\n\r\n}\r\n\r\nfunction detectDesktopShared(stream) {\r\n    peer.on('connection', function(conn) {\r\n        conn.on('data', function(data) {\r\n            if (data.sharedScreen == true) {\r\n                sharedScreen = true;\r\n            } else if (data.sharedScreen == false) {\r\n\r\n                console.log(\"detectDesktopShared stopped\");\r\n\r\n                stopSharing();\r\n                sharedScreen = false;\r\n                return false;\r\n            } else {\r\n                alert(\"the stream data\")\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    peer.on('close', function(conn) {\r\n        //console.log(\"close\")\r\n    });\r\n\r\n    peer.on('call', call => {\r\n\r\n        if (stream == null) {\r\n\r\n            //console.log(\"answer the stream without any stream\", call)\r\n            call.answer();\r\n\r\n        } else {\r\n\r\n            //console.log(\"answer the stream\", stream)\r\n\r\n            call.answer(stream);\r\n\r\n            if (stream.getAudioTracks().length == 1 && stream.getVideoTracks().length == 1) {\r\n                removeElementByID(call.peer);\r\n                callerElement = document.createElement('video');\r\n                callerElement.setAttribute(\"id\", call.peer);\r\n                callerElement.setAttribute(\"class\", \"peerCallBackVideo\");\r\n                callerElement.muted = false;\r\n\r\n                addVideo(callerElement, stream);\r\n            } else {\r\n                removeElementByID(call.peer);\r\n                callerElement = document.createElement('audio');\r\n                callerElement.setAttribute(\"id\", call.peer);\r\n                callerElement.setAttribute(\"class\", \"peerCallBackAudio\"); //call peer\r\n                callerElement.setAttribute(\"controls\", \"controls\");\r\n                callerElement.muted = false;\r\n                addAudio(callerElement, stream);\r\n            }\r\n        }\r\n\r\n        call.on('stream', userStream => {\r\n\r\n            if (sharedScreen == true) {\r\n                sharedVid = document.createElement('video');\r\n                sharedVid.setAttribute(\"id\", \"sharedVideo\");\r\n\r\n\r\n                //the lesson shared container must be on the member lesson slider component\r\n                addVideoContent('lessonSharedContainer', sharedVid, userStream);\r\n\r\n                //hide lesson Slide\r\n                hideByElementId(\"lessonSlide\");\r\n            } else {\r\n                data = {\r\n                    'id': myId,\r\n                    'user': user,\r\n                    'roomID': roomID,\r\n                    'videoStream': mediaCallStream\r\n                }\r\n                socket.emit(\"changeMedia\", data);\r\n            }\r\n        });\r\n\r\n        call.on('finish', function() {\r\n            //console.log(\"called finish\")\r\n        });\r\n\r\n        call.on('error', (err) => {\r\n            alert(err)\r\n        });\r\n\r\n        call.on(\"close\", () => {\r\n            sharedVid.remove();\r\n        });\r\n\r\n\r\n    });\r\n};\r\n\r\n\r\n\r\nfunction shareScreen() {\r\n\r\n    navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n        audio: true\r\n    }).then((userStream) => {\r\n\r\n        sharedScreen = userStream;\r\n\r\n        //@todo: (hide slide then show the user shared)\r\n        const sharedVid = document.createElement('video');\r\n        sharedVid.setAttribute(\"id\", \"sharedVideo\");\r\n        sharedVid.muted = false;\r\n\r\n        //the lesson shared container must be on the member lesson slider component\r\n        addVideoContent('lessonSharedContainer', sharedVid, userStream);\r\n\r\n        //hide lesson Slide\r\n        hideByElementId(\"lessonSlide\");\r\n\r\n        //Connect to peers\r\n        Object.keys(peerConnections).forEach(function(peerID) {\r\n            //connect and send\r\n            var conn = peer.connect(peerID);\r\n            conn.on('open', () => {\r\n                /*********************               \r\n                    (NEW) share screen data\r\n                *************************/\r\n                let data = {\r\n                        'id': peerID,\r\n                        'sharedScreen': true\r\n                    }\r\n                    //add to the connection, and send then call\r\n                conn.send(data);\r\n                let sharingScreen = peer.call(peerID, sharedScreen);\r\n            });\r\n        });\r\n\r\n\r\n        //The screen record is stopped by myself\r\n        sharedScreen.getVideoTracks()[0].onended = function() {\r\n            showByElementId(\"lessonSlide\")\r\n            document.getElementById(\"sharedVideo\").remove();\r\n            //send this shared screen false to stop peer\r\n            Object.keys(peerConnections).forEach(function(peerID) {\r\n                var conn = peer.connect(peerID);\r\n                conn.on('open', () => {\r\n                    /*********************               \r\n                        (STOP SHARE) share screen data\r\n                    *************************/\r\n                    let data = {\r\n                        'id': peerID,\r\n                        'sharedScreen': false\r\n                    }\r\n                    conn.send(data);\r\n                });\r\n            })\r\n        };\r\n\r\n\r\n\r\n\r\n\r\n        //socket.emit(\"userShare\", roomID, sharedScreen);\r\n\r\n    });\r\n}\r\n\r\naudioInputSelect.onchange = restart;\r\naudioOutputSelect.onchange = changeAudioDestination;\r\nvideoSelect.onchange = restart;\r\n\r\n\r\n\r\n\r\npeer.on('connection', function(conn) {\r\n\r\n    conn.on('data', function(data) {\r\n\r\n        console.log(\"share connection: peer connected\", data)\r\n\r\n        if (data.sharedScreen == true) {\r\n\r\n            sharedScreen = true;\r\n\r\n        } else if (data.sharedScreen == false) {\r\n\r\n            console.log(\"connection shared stopped\");\r\n            stopSharing();\r\n            sharedScreen = false;\r\n            return false;\r\n        } else {\r\n\r\n            alert(\"the stream data\")\r\n        }\r\n\r\n    });\r\n\r\n    conn.on('close', (conn) => {\r\n        console.log(\"shared video connection of peer has been closed\", conn)\r\n\r\n        const sharedVideo = document.getElementById('sharedVideo');\r\n\r\n        // Check if the video element exists before attempting to remove it\r\n        if (sharedVideo) {\r\n          // Remove the video element from the DOM\r\n          sharedVideo.remove();\r\n        } else {\r\n          console.log('Element with id \"sharedVideo\" not found.');\r\n        }\r\n                \r\n    });\r\n\r\n});\r\n\r\npeer.on('open', (id) => {\r\n\r\n    //console.log(\"my peer id\" + id)\r\n    //console.log(\"my user \", user)\r\n    //console.log(\"my room id \", roomID)\r\n\r\n    myId = id;\r\n\r\n    data = {\r\n        'id': id,\r\n        'user': user,\r\n        'roomID': roomID\r\n    }\r\n\r\n    socket.emit(\"newUser\", data);\r\n\r\n    //start a video with audio connection width data of user\r\n    let video = true;\r\n    let audio = true;\r\n\r\n    //start the my own video camera\r\n\r\n    start(video, audio, data)\r\n\r\n});\r\n\r\n\r\n\r\npeer.on('call', call => {\r\n\r\n    let ctr = 0;\r\n\r\n    //console.log(\"PEER:: CALLING... for a video stream or audio stream ...\");\r\n\r\n    const audioSource = audioInputSelect.value;\r\n    const videoSource = videoSelect.value;\r\n    const constraints = {\r\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\r\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\r\n    };\r\n\r\n    navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n\r\n        userCallStream = stream;\r\n\r\n        if (stream.getAudioTracks().length == 1 && stream.getVideoTracks().length == 1) {\r\n            //alert(\"stream from sender is a video 1\")\r\n        } else {\r\n            //alert(\"stream from sender is a audio 2\")\r\n        }\r\n\r\n        call.answer(stream);\r\n\r\n        call.on('stream', (userStream) => {\r\n\r\n            recieverCallStream = userStream;\r\n\r\n\r\n            peerConnections[call.peer] = call;\r\n\r\n            //console.log(\"recieve video from initiator \", call);\r\n\r\n            if (ctr == 0) {\r\n\r\n                if (sharedScreen == true) {\r\n                    sharedVid = document.createElement('video');\r\n                    sharedVid.setAttribute(\"id\", \"sharedVideo\");\r\n\r\n\r\n                    //the lesson shared container must be on the member lesson slider component\r\n                    addVideoContent('lessonSharedContainer', sharedVid, userStream);\r\n\r\n                    //hide lesson Slide\r\n                    hideByElementId(\"lessonSlide\");\r\n\r\n                    return false;\r\n                }\r\n\r\n                if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\r\n\r\n                    //alert(\"reciever from sender is a video 5 :: (peer)\" + call.peer)\r\n\r\n                    removeElementByID(call.peer);\r\n                    callerElement = document.createElement('video');\r\n                    callerElement.setAttribute(\"id\", call.peer);\r\n                    callerElement.setAttribute(\"class\", \"peerCallBackVideo\");\r\n                    callerElement.muted = false;\r\n\r\n                    addVideo(callerElement, userStream);\r\n                } else {\r\n\r\n\r\n                    //alert(\"reciever from sender is a audio 6 :: (peer)\" + call.peer)\r\n\r\n                    removeElementByID(call.peer);\r\n                    callerElement = document.createElement('audio');\r\n                    callerElement.setAttribute(\"id\", call.peer);\r\n                    callerElement.setAttribute(\"class\", \"peerCallBackAudio\"); //call peer\r\n                    callerElement.setAttribute(\"controls\", \"controls\");\r\n                    callerElement.muted = false;\r\n\r\n                    addAudio(callerElement, userStream);\r\n\r\n                }\r\n            }\r\n            ctr++\r\n        });\r\n\r\n        call.on('close', () => {\r\n            removeElementByID(call.peer);\r\n            //console.log(\"user disconected\")\r\n        });\r\n\r\n    }).catch((error) => {\r\n\r\n        //console.log(\"recieve audio from initiator\", call);\r\n\r\n\r\n\r\n        const audioSource = audioInputSelect.value;\r\n        const constraints = {\r\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\r\n            video: false,\r\n        };\r\n\r\n        navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n\r\n            userCallStream = stream;\r\n            if (stream.getAudioTracks().length == 1 && stream.getVideoTracks().length == 1) {\r\n                //alert(\"stream from sender is a video 3\")\r\n            } else {\r\n                //alert(\"stream from sender is a audio 4\")\r\n            }\r\n\r\n            call.answer(stream);\r\n\r\n            call.on('stream', (userStream) => {\r\n\r\n                recieverCallStream = userStream;\r\n                peerConnections[call.peer] = call;\r\n\r\n                if (ctr == 0) {\r\n\r\n\r\n                    if (sharedScreen == true) {\r\n                        sharedVid = document.createElement('video');\r\n                        sharedVid.setAttribute(\"id\", \"sharedVideo\");\r\n\r\n                        //the lesson shared container must be on the member lesson slider component\r\n                        addVideoContent('lessonSharedContainer', sharedVid, userStream);\r\n\r\n                        //hide lesson Slide\r\n                        hideByElementId(\"lessonSlide\");\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\r\n\r\n                        //alert(\"reciever from sender is a video 7  :: (peer) \" + call.peer)\r\n\r\n                        removeElementByID(call.peer);\r\n                        callerElement = document.createElement('video');\r\n                        callerElement.setAttribute(\"id\", call.peer);\r\n                        callerElement.setAttribute(\"class\", \"peerCallBackVideo\");\r\n                        callerElement.muted = false;\r\n\r\n                        addVideo(callerElement, userStream);\r\n                    } else {\r\n\r\n                        //alert(\"reciever from sender is a audio 8 :: (peer)\" + call.peer)\r\n                        removeElementByID(call.peer);\r\n                        callerElement = document.createElement('audio');\r\n                        callerElement.setAttribute(\"id\", call.peer);\r\n                        callerElement.setAttribute(\"class\", \"peerCallBackAudio\"); //call peer\r\n                        callerElement.setAttribute(\"controls\", \"controls\");\r\n                        callerElement.muted = false;\r\n                        addAudio(callerElement, userStream);\r\n                    }\r\n                }\r\n\r\n                ctr++\r\n            });\r\n\r\n            call.on('close', () => {\r\n                removeElementByID(call.peer);\r\n                //console.log(\"user disconected\")\r\n            });\r\n\r\n        }).catch((error) => {\r\n            //alert(\"I can't send any video r audio to your contact, please check media\")\r\n        });\r\n    });\r\n});\r\n\r\npeer.on('close', (id) => {\r\n    document.getElementById(id).remove();\r\n});\r\n\r\n\r\nsocket.on('userJoined', (data) => {\r\n\r\n\r\n    peerConnections[data.id] = data;\r\n\r\n    console.log(\"user joined ::: calling initiator with just audio and video\", data.id);\r\n\r\n    const audioSource = audioInputSelect.value;\r\n    const videoSource = videoSelect.value;\r\n    const constraints = {\r\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\r\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\r\n    };\r\n\r\n    navigator.mediaDevices.getUserMedia(constraints).then((mediaStream) => {\r\n\r\n        //console.log(\"user joined ::: calling initiator with just audio and video\", data.id);\r\n\r\n        userJoinedStream = mediaStream;\r\n\r\n        callback = peer.call(data.id, mediaStream);\r\n\r\n        if (callback) {\r\n\r\n            peerConnections[callback.peer] = callback;\r\n\r\n            let ctr = 0;\r\n\r\n            callback.on('stream', (userStream) => {\r\n\r\n                if (ctr == 0) {\r\n\r\n                    if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\r\n\r\n                        removeElementByID(data.id);\r\n\r\n                        callerElement = document.createElement('video');\r\n                        callerElement.setAttribute(\"id\", data.id);\r\n                        callerElement.setAttribute(\"class\", \"user_joined_peer_call_back\");\r\n                        callerElement.muted = false;\r\n\r\n                        addVideo(callerElement, userStream);\r\n\r\n                    } else {\r\n\r\n                        removeElementByID(data.id);\r\n\r\n                        callerElement = document.createElement('audio');\r\n                        callerElement.setAttribute(\"id\", data.id);\r\n                        callerElement.setAttribute(\"class\", \"user_joined_peer_call_back\");\r\n                        callerElement.setAttribute(\"controls\", \"controls\");\r\n                        callerElement.muted = false;\r\n\r\n                        addAudio(callerElement, userStream);\r\n\r\n                    }\r\n                }\r\n\r\n                ctr++;\r\n            });\r\n\r\n            callback.on('close', () => {\r\n                removeElementByID(data.id);\r\n            });\r\n\r\n            callback.on('error', (err) => {\r\n                //console.log(err);\r\n            });\r\n\r\n\r\n        }\r\n\r\n        checkVideoDisabled();\r\n        checkAudioMuted();\r\n\r\n    }).catch((error) => {\r\n\r\n        //I have only audio, send to the audio to my peer\r\n        //console.log(\"user joined:: I have only audio, send to the audio to my peer\", data.id);\r\n\r\n\r\n        const audioConstraints = {\r\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\r\n            video: false,\r\n        };\r\n\r\n        navigator.mediaDevices.getUserMedia(audioConstraints).then((mediaCallStream) => {\r\n            userJoinedStream = mediaCallStream;\r\n\r\n\r\n            if (myVideoStream) {\r\n                callback = peer.call(data.id, mediaCallStream);\r\n            } else {\r\n                data = {\r\n                    'id': myId,\r\n                    'user': user,\r\n                    'roomID': roomID,\r\n                    'videoStream': mediaCallStream\r\n                }\r\n\r\n                socket.emit(\"changeMedia\", data);\r\n\r\n                //never mind callback, i will call change media\r\n                callback = null;\r\n            }\r\n\r\n\r\n\r\n            if (callback) {\r\n\r\n                peerConnections[callback.peer] = callback;\r\n                let ctr = 0;\r\n                callback.on('stream', (userStream) => {\r\n                    if (ctr == 0) {\r\n\r\n                        if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\r\n\r\n                            //removeElementByID(data.id);\r\n                            callerElement = document.createElement('video');\r\n                            callerElement.setAttribute(\"id\", data.id);\r\n                            callerElement.setAttribute(\"class\", \"user_joined_peer_call_back\");\r\n                            callerElement.muted = false;\r\n                            addVideo(callerElement, userStream);\r\n\r\n                        } else {\r\n                            removeElementByID(data.id);\r\n                            callerElement = document.createElement('audio');\r\n                            callerElement.setAttribute(\"id\", data.id);\r\n                            callerElement.setAttribute(\"class\", \"user_joined_peer_call_back\");\r\n                            callerElement.setAttribute(\"controls\", \"controls\");\r\n                            callerElement.muted = false;\r\n                            addAudio(callerElement, userStream);\r\n                        }\r\n                    }\r\n                    ctr++;\r\n                });\r\n\r\n                callback.on('close', () => {\r\n                    removeElementByID(data.id);\r\n                });\r\n\r\n                callback.on('error', (err) => {\r\n                    //console.log(err);\r\n                });\r\n\r\n                peerConnections[data.id] = callback;\r\n            }\r\n        }).catch((error) => {\r\n\r\n            //alert(\"Please connect audioinput device and try again\");\r\n            // //console.log(error)\r\n        });\r\n\r\n        checkVideoDisabled();\r\n        checkAudioMuted();\r\n\r\n    });\r\n\r\n});\r\n\r\n\r\nsocket.on('mediaChanged', (data) => {\r\n    const audioSource = audioInputSelect.value;\r\n    const videoSource = videoSelect.value;\r\n    const constraints = {\r\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\r\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\r\n    };\r\n\r\n    navigator.mediaDevices.getUserMedia(constraints).then((userStream) => {\r\n\r\n        //console.log(\"mediaChanged: initiator (recieved)\")\r\n\r\n        callback = peer.call(data.id, userStream);\r\n\r\n        if (callback) {\r\n\r\n            let ctr = 0;\r\n\r\n            callback.on('stream', (userStream) => {\r\n\r\n                if (ctr == 0) {\r\n\r\n                    //console.log(\"recipient callback : video stream\");\r\n\r\n                    if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\r\n\r\n                        removeElementByID(data.id);\r\n\r\n                        callerElement = document.createElement('video');\r\n                        callerElement.setAttribute(\"id\", callback.peer);\r\n                        callerElement.setAttribute(\"class\", \"repipient_video_changed\");\r\n                        callerElement.muted = false;\r\n\r\n                        addVideo(callerElement, userStream);\r\n\r\n\r\n                    } else {\r\n\r\n                        removeElementByID(data.id);\r\n                        callerElement = document.createElement('audio');\r\n                        callerElement.setAttribute(\"id\", data.id);\r\n                        callerElement.setAttribute(\"class\", \"repipient_audio_changed\");\r\n                        callerElement.setAttribute(\"controls\", \"controls\");\r\n                        callerElement.muted = false;\r\n                        addAudio(callerElement, userStream);\r\n                    }\r\n                }\r\n                ctr++;\r\n            });\r\n\r\n            callback.on('close', () => {\r\n                removeElementByID(data.id);\r\n            });\r\n\r\n            callback.on('error', (err) => {\r\n                //console.log(err);\r\n            });\r\n\r\n            peerConnections[data.id] = callback;\r\n        }\r\n\r\n\r\n    }).catch((error) => {\r\n\r\n        const audioConstraints = {\r\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\r\n            video: false,\r\n        };\r\n\r\n        navigator.mediaDevices.getUserMedia(audioConstraints).then((userStream) => {\r\n\r\n            userCallStream = userStream;\r\n\r\n            //console.log(\"initiator SENT AND AUDIO\")\r\n\r\n            callback = peer.call(data.id, userStream);\r\n\r\n            if (callback) {\r\n\r\n                let ctr = 0;\r\n\r\n                callback.on('stream', (userStream) => {\r\n\r\n                    recieverCallStream = userStream;\r\n\r\n                    //console.log(\"this is for the audio, stream of the initiator\");\r\n\r\n                    if (ctr == 0) {\r\n\r\n                        //console.log(userStream.getAudioTracks().length)\r\n                        //console.log(userStream.getVideoTracks().length)\r\n\r\n                        if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\r\n\r\n                            //console.log(\"user sent a video\")\r\n\r\n                            removeElementByID(callback.peer);\r\n                            callerElement = document.createElement('video');\r\n                            callerElement.setAttribute(\"id\", callback.peer);\r\n                            callerElement.setAttribute(\"class\", \"callerBackVideo\");\r\n                            callerElement.muted = false;\r\n                            addVideo(callerElement, userStream);\r\n                        } else {\r\n\r\n                            //console.log(\"user sent a AUDIO\")\r\n\r\n                            removeElementByID(callback.peer);\r\n                            callerElement = document.createElement('audio');\r\n                            callerElement.setAttribute(\"id\", callback.peer);\r\n                            callerElement.setAttribute(\"class\", \"callbackAudio_media\");\r\n                            callerElement.setAttribute(\"controls\", \"controls\");\r\n                            callerElement.muted = false;\r\n                            addAudio(callerElement, userStream);\r\n                        }\r\n                    }\r\n\r\n\r\n                    ctr++;\r\n                });\r\n\r\n                callback.on('close', () => {\r\n                    removeElementByID(data.id);\r\n                });\r\n\r\n                callback.on('error', (err) => {\r\n                    //console.log(err);\r\n                });\r\n\r\n                peerConnections[data.id] = callback;\r\n            }\r\n\r\n\r\n        }).catch((error) => {\r\n\r\n            //alert(\"audio only\");\r\n            //console.log(error)\r\n        });\r\n\r\n    });\r\n});\r\n\r\n\r\nsocket.on('userDisconnect', id => {\r\n    //console.log(\"userDisconnected\", id);\r\n    removeElementByID(id);\r\n    try {\r\n        peerConnections[id].close();\r\n    } catch (err) {\r\n        //console.log(\"error disconnect : \", err)\r\n    }\r\n});\r\n\r\n\r\nfunction checkAudioMuted() {\r\n    const muteIcon = document.querySelector('.fa-volume-mute');\r\n\r\n    // Check if the 'display' property is set to 'none'\r\n    if (muteIcon.style.display !== 'none') {       \r\n        // The element with class 'fa-volume-mute' is not hidden\r\n        console.log('fa-volume-mute is visible, we will mute mic');\r\n        muteMic();\r\n    }\r\n}\r\n\r\nfunction muteMic() {\r\n  userJoinedStream.getAudioTracks().forEach((track) => {\r\n    track.enabled = !track.enabled;\r\n  });\r\n}\r\n\r\n\r\nfunction toggleMic() {\r\n    if (userJoinedStream != null) {\r\n        userJoinedStream.getAudioTracks().forEach((track) => {\r\n            track.enabled = !track.enabled;\r\n            //console.log(track);\r\n\r\n            if (track.enabled == true) {\r\n                $('#toggleAudio .fa-volume-up').show();\r\n                $('#toggleAudio .fa-volume-mute').hide();\r\n            } else {\r\n                $('#toggleAudio .fa-volume-up').hide();\r\n                $('#toggleAudio .fa-volume-mute').show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    if (userCallStream != null) {\r\n        userCallStream.getAudioTracks().forEach((track) => {\r\n            track.enabled = !track.enabled;\r\n            //console.log(track);\r\n\r\n            if (track.enabled == true) {\r\n                $('#toggleAudio .fa-volume-up').show();\r\n                $('#toggleAudio .fa-volume-mute').hide();\r\n            } else {\r\n                $('#toggleAudio .fa-volume-up').hide();\r\n                $('#toggleAudio .fa-volume-mute').show();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction checkVideoDisabled() {\r\n    const videoIcon = document.querySelector('.fa-video-slash');    \r\n    if (videoIcon.style.display !== 'none') {               \r\n        console.log('video slash is visible, we will disable video');\r\n        disableVideo();\r\n    }\r\n}\r\n\r\nfunction disableVideo() {\r\n    userJoinedStream.getVideoTracks().forEach((track) => {\r\n      track.enabled = !track.enabled;\r\n    });\r\n  }\r\n\r\n  \r\nfunction toggleCamera() {\r\n    if (userJoinedStream != null) {\r\n        userJoinedStream.getVideoTracks().forEach((track) => {\r\n            track.enabled = !track.enabled;\r\n            //console.log(track);\r\n\r\n            if (track.enabled == true) {\r\n                $('#toggleCamera .fa-video').show();\r\n                $('#toggleCamera .fa-video-slash').hide();\r\n            } else {\r\n                $('#toggleCamera .fa-video').hide();\r\n                $('#toggleCamera .fa-video-slash').show();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    if (userCallStream != null) {\r\n        userCallStream.getVideoTracks().forEach((track) => {\r\n            track.enabled = !track.enabled;\r\n            //console.log(track);\r\n\r\n            if (track.enabled == true) {\r\n                $('#toggleCamera .fa-video').show();\r\n                $('#toggleCamera .fa-video-slash').hide();\r\n            } else {\r\n                $('#toggleCamera .fa-video').hide();\r\n                $('#toggleCamera .fa-video-slash').show();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n}\r\n\r\nlet shareScreenBtn = document.getElementById(\"btnShareScreen\")\r\n\r\nif (shareScreenBtn) {\r\n    document.getElementById(\"btnShareScreen\").addEventListener(\"click\", function() {\r\n        shareScreen();\r\n    });\r\n}\r\n\r\n\r\nlet toggleCameraBtn = document.getElementById(\"toggleCamera\");\r\n\r\nif (toggleCameraBtn) {\r\n    document.getElementById(\"toggleCamera\").addEventListener(\"click\", function() {\r\n        toggleCamera()\r\n    });\r\n}\r\n\r\nlet toggleAudioBtn = document.getElementById(\"toggleAudio\")\r\n\r\nif (toggleAudioBtn) {\r\n    document.getElementById(\"toggleAudio\").addEventListener(\"click\", function() {\r\n        toggleMic();\r\n    });\r\n}\r\n\r\n/************VOLUME CONTROL*************** */\r\nfunction setVolume(volume) {\r\n    myVideoStream.getAudioTracks().forEach(track => {\r\n        track.applyConstraints({ volume: volume });\r\n    });\r\n}\r\n\r\n\r\n\r\nconst volumeControl = document.getElementById('volume-control');\r\nif (volumeControl) {\r\n    volumeControl.addEventListener('input', () => {\r\n        setVolume(volumeControl.value);\r\n    });\r\n}\r\n\r\nfunction destroyVideoSteam(mediaStream) {\r\n    mediaStream.getVideoTracks().forEach((track) => {\r\n        track.stop();\r\n    });\r\n}\r\n\r\nfunction destroyAudioStream(audioStream) {\r\n    audioStream.getAudioTracks().forEach((track) => {\r\n        track.stop();\r\n    });\r\n}\r\n\r\n/************ END SESSION *************** */\r\nfunction destroyUserMediaContainer() {\r\n    $('.right-fixed').remove();\r\n}\r\n\r\nasync function destroyUserMedia() {\r\n    Object.keys(peerConnections).forEach(function(peerID) {\r\n        peerConnections[peerID].close();\r\n    });\r\n\r\n    if (myVideoStream != null) {\r\n        destroyVideoSteam(myVideoStream);\r\n        destroyAudioStream(myVideoStream);\r\n    }\r\n\r\n    if (myAudioStream != null) {\r\n        destroyVideoSteam(myAudioStream);\r\n        destroyAudioStream(myAudioStream);\r\n    }\r\n\r\n    if (userJoinedStream != null) {\r\n        destroyVideoSteam(userJoinedStream);\r\n        destroyAudioStream(userJoinedStream);\r\n    }\r\n\r\n    if (userCallStream != null) {\r\n        destroyVideoSteam(userCallStream);\r\n        destroyAudioStream(userCallStream);\r\n    }\r\n\r\n    if (recieverCallStream != null) {\r\n        destroyVideoSteam(recieverCallStream);\r\n        destroyAudioStream(recieverCallStream);\r\n    }\r\n\r\n    destroyUserMediaContainer();\r\n}\r\n\r\nconst destroySessionMediaBtn = document.getElementById('destroy-session-media');\r\n\r\nif (destroySessionMediaBtn) {\r\n    destroySessionMediaBtn.addEventListener('click', () => {\r\n        destroyUserMedia();\r\n    });\r\n}"],"sourceRoot":""}