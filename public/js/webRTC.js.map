{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/webRTC.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_regeneratorRuntime","e","a","iterator","asyncIterator","u","define","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","type","arg","h","f","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","videoElement","audioElement","socket","io","APP_WEBRTC_SERVER_URL","myId","peer","Peer","initiator","trickle","myVideoStream","myAudioStream","userCallStream","recieverCallStream","userJoinedStream","sharedScreen","peerConnections","mediaContainer","document","getElementById","videoGrid","audioInputSelect","querySelector","audioOutputSelect","videoSelect","selectors","gotDevices","deviceInfos","map","select","firstChild","removeChild","deviceInfo","option","createElement","deviceId","kind","text","label","concat","appendChild","selectorIndex","Array","childNodes","some","attachSinkId","element","sinkId","muted","setSinkId","errorMessage","console","selectedIndex","warn","handleError","data","user","roomID","start","addAudio","audio","stream","srcObject","addEventListener","play","append","addVideo","video","addVideoContent","containerID","containerElement","hideByElementId","elementID","el","style","display","removeElementByID","id","remove","createUserMedia","constraints","navigator","mediaDevices","getUserMedia","window","setAttribute","addMyVideo","addMyAudio","enumerateDevices","alert","getTracks","track","audioSource","videoSource","exact","restart","emit","stopSharing","log","showElement","container","parent","parentNode","newContainer","textContent","insertBefore","removeSharedVideo","shareScreen","getDisplayMedia","userStream","sharedVid","peerID","conn","connect","on","send","getVideoTracks","onended","checkAudioMuted","getAudioTracks","enabled","checkVideoDisabled","disabled","HTMLMediaElement","onchange","audioDestination","sharedVideo","ctr","answer","lessonSharedContainer","contains","classToAdd","callerElement","mediaStream","callback","audioConstraints","mediaCallStream","close","$","show","hide","volumeControl","destroyVideoSteam","destroyAudioStream","audioStream","destroyUserMediaContainer","_destroyUserMedia","_callee","_context","volume","applyConstraints","destroySessionMediaBtn","destroyUserMedia"],"mappings":"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","file":"/js/webRTC.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","const socket = io(APP_WEBRTC_SERVER_URL, {});\n//const socket = io('{{ https://rtcserver.esuccess-inc.com:40002}}', {});\n\nlet myId = null;\n\nconst peer = new Peer({\n    initiator: false,\n    trickle: false,\n});\n\n'use strict';\n\nlet myVideoStream = null;\nlet myAudioStream = null;\n\n//this will determine who calls\nlet userCallStream = null;\nlet recieverCallStream = null;\nlet userJoinedStream = null;\n\n//Elements\nlet videoElement;\nlet audioElement;\n\n//Share Screen\nlet sharedScreen = false;\nlet checkingInterval = null;\n\nconst peerConnections = {}\n\nlet mediaContainer = document.getElementById('myMediaContainer');\nlet videoGrid = document.getElementById('videoGrid');\n\n//Source\nconst audioInputSelect = document.querySelector('select#audioSource');\nconst audioOutputSelect = document.querySelector('select#audioOutput');\nconst videoSelect = document.querySelector('select#videoSource');\nconst selectors = [audioInputSelect, audioOutputSelect, videoSelect];\n\naudioOutputSelect.disabled = !('sinkId' in HTMLMediaElement.prototype);\n\nnavigator.mediaDevices.enumerateDevices().then(gotDevices).catch(handleError);\n\n\nfunction gotDevices(deviceInfos) {\n    // Handles being called several times to update labels. Preserve values.\n    const values = selectors.map(select => select.value);\n    selectors.forEach(select => {\n        while (select.firstChild) {\n            select.removeChild(select.firstChild);\n        }\n    });\n    for (let i = 0; i !== deviceInfos.length; ++i) {\n        const deviceInfo = deviceInfos[i];\n        const option = document.createElement('option');\n        option.value = deviceInfo.deviceId;\n\n        if (deviceInfo.kind === 'audioinput') {\n            option.text = deviceInfo.label || `microphone ${audioInputSelect.length + 1}`;\n            audioInputSelect.appendChild(option);\n        } else if (deviceInfo.kind === 'audiooutput') {\n            option.text = deviceInfo.label || `speaker ${audioOutputSelect.length + 1}`;\n            audioOutputSelect.appendChild(option);\n        } else if (deviceInfo.kind === 'videoinput') {\n            option.text = deviceInfo.label || `camera ${videoSelect.length + 1}`;\n            videoSelect.appendChild(option);\n        } else {\n            //console.log('Some other kind of source/device: ', deviceInfo);\n        }\n    }\n    selectors.forEach((select, selectorIndex) => {\n        if (Array.prototype.slice.call(select.childNodes).some(n => n.value === values[selectorIndex])) {\n            select.value = values[selectorIndex];\n        }\n    });\n}\n\n\n\n// Attach audio output device to video element using device/sink ID.\nfunction attachSinkId(element, sinkId) {\n\n    //(mute element, feedback if false)\n    element.muted = true;\n\n    if (typeof element.sinkId !== 'undefined') {\n        element.setSinkId(sinkId)\n            .then(() => {\n                //console.log(`Success, audio output device attached: ${sinkId}`);\n            })\n            .catch(error => {\n                let errorMessage = error;\n                if (error.name === 'SecurityError') {\n                    errorMessage = `You need to use HTTPS for selecting audio output device: ${error}`;\n                }\n                console.error(errorMessage);\n                // Jump back to first output device in the list as it's the default.\n                audioOutputSelect.selectedIndex = 0;\n            });\n    } else {\n        console.warn('Browser does not support output device selection.');\n    }\n}\n\nfunction changeAudioDestination() {\n    const audioDestination = audioOutputSelect.value;\n\n\n    if (myVideoStream) {\n        attachSinkId(videoElement, audioDestination);\n    } else {\n        attachSinkId(audioElement, audioDestination);\n    }\n}\n\nfunction gotStream(stream) {\n    window.stream = stream; // make stream available to console\n    videoElement.srcObject = stream;\n\n    //Register the video stream to my Stream\n    myVideoStream = stream;\n\n    // Refresh button list in case labels have become available\n    return navigator.mediaDevices.enumerateDevices();\n}\n\nfunction handleError(error) {\n    //start a video with audio connection width data of user\n    let video = false;\n    let audio = true;\n\n\n    //start audio\n    data = {\n        'id': myId,\n        'user': user,\n        'roomID': roomID\n    }\n\n    start(video, audio, data);\n}\n\n\nfunction addMyAudio(audio, stream) {\n    audio.srcObject = stream;\n    audio.muted = true;\n\n    audio.addEventListener('loadedmetadata', () => {\n        audio.play()\n    })\n    mediaContainer.append(audio);\n}\n\n\nfunction addMyVideo(video, stream) {\n    video.srcObject = stream;\n    video.muted = true;\n\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n    mediaContainer.append(video);\n}\n\n\nfunction addAudio(audio, stream) {\n\n    while (videoGrid.firstChild) {\n        videoGrid.removeChild(videoGrid.firstChild);\n    }\n\n    audio.srcObject = stream;\n    audio.addEventListener('loadedmetadata', () => {\n        audio.play()\n    })\n    videoGrid.append(audio);\n}\n\nfunction addVideo(video, stream) {\n\n    while (videoGrid.firstChild) {\n        videoGrid.removeChild(videoGrid.firstChild);\n    }\n    \n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n    videoGrid.append(video);\n}\n\n\nfunction addVideoContent(containerID, video, stream) {\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n\n    let containerElement = document.getElementById(containerID);\n    if (containerElement) {\n        containerElement.append(video);\n    }\n}\n\n\nfunction showByElementId(elementID) {\n    let el = document.getElementById(elementID);\n    if (el) {\n        el.style.display = 'block';\n    }\n}\n\nfunction hideByElementId(elementID) {\n    let el = document.getElementById(elementID);\n    if (el) {\n        el.style.display = 'none';\n    }\n}\n\nfunction removeElementByID(id) {\n    let element = document.getElementById(id);\n    if (element) {\n        element.remove();\n    }\n}\n\nfunction createUserMedia(video, audio, constraints) {\n\n    navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\n\n        removeElementByID(\"myVideo\");\n        removeElementByID(\"myAudio\");\n\n        if (audio == true && video == true) {\n            myAudioStream = null;\n\n            //Register the video stream to my Stream\n            myVideoStream = stream;\n            window.stream = stream; // make stream available to console     \n            /*******\n                (NOTE: THIS SHOULD BE MUTED = TRUE) \n            *******/\n\n            videoElement = document.createElement('video');\n            videoElement.setAttribute(\"id\", \"myVideo\");\n            videoElement.muted = false;\n            //videoElement.muted = true;\n            addMyVideo(videoElement, stream);\n\n\n            // detectDesktopShared(stream)\n        } else {\n\n\n            //Register the video stream to my Stream\n            myVideoStream = null;\n            window.stream = stream; // make stream available to console       \n\n            //add to my audio stream\n            myAudioStream = stream;\n\n            //console.log(\"this is a audio only\")\n\n            /*******\n                (NOTE: THIS SHOULD BE MUTED = TRUE) \n            *******/\n            audioElement = document.createElement('audio');\n            audioElement.setAttribute(\"id\", \"myAudio\");\n            audioElement.setAttribute(\"controls\", \"controls\");\n            //audioElement.muted = false;\n            audioElement.muted = true;\n\n            addMyAudio(audioElement, stream);\n            // detectDesktopShared(stream)\n        }\n\n        return navigator.mediaDevices.enumerateDevices();\n\n\n    }).then(gotDevices).catch((err) => {\n\n        if (video == true && audio == true) {\n\n            handleError(err);\n\n        } else {\n\n            alert(\"no input media detected, please connect and refresh your browser\")\n        }\n    });\n\n\n}\n\nfunction start(video, audio, data) {\n\n    if (window.stream) {\n        window.stream.getTracks().forEach(track => {\n            track.stop();\n        });\n    }\n    const audioSource = audioInputSelect.value;\n    const videoSource = videoSelect.value;\n\n    if (video == true && audio == true) {\n\n        const constraints = {\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n            video: { deviceId: videoSource ? { exact: videoSource } : undefined }\n        };\n\n        //console.log(\"connect video : start\")\n\n        createUserMedia(video, audio, constraints)\n\n    } else if (video == false && audio == true) {\n\n        const constraints = {\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n            video: false\n        };\n\n        //console.log(\"connect audio : start\")\n        createUserMedia(video, audio, constraints)\n\n    } else {\n\n        //alert(\"no media detected, please connect and try again\")\n    }\n\n}\n\nfunction restart() {\n\n    if (window.stream) {\n        window.stream.getTracks().forEach(track => {\n            track.stop();\n        });\n    }\n\n    const audioSource = audioInputSelect.value;\n    const videoSource = videoSelect.value;\n    const constraints = {\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\n        window.stream = stream; // make stream available to console\n        videoElement.srcObject = stream;\n\n        //console.log(\"i have muted this\")\n        //videoElement.muted = true;\n\n        //Register the video stream to my Stream\n        myVideoStream = stream;\n\n        data = {\n            'id': myId,\n            'user': user,\n            'roomID': roomID,\n            'videoStream': myVideoStream\n        }\n\n\n\n        socket.emit(\"changeMedia\", data);\n\n        removeElementByID(myId);\n\n\n    }).catch(handleError);\n\n}\n\n\n\n//user end stop sharing\nfunction stopSharing() {\n    console.log(\"stopSharing()\")\n\n    let showElement = document.getElementById(\"lessonSlide\");\n\n    if (showElement) {\n        showElement.style.display = 'block';\n    }\n\n    checkAndRemoveSharedVideo();\n}\n\nfunction checkAndRemoveSharedVideo() {\n    const removeElement = document.getElementById(\"sharedVideo\");\n    if (removeElement) {\n        removeSharedVideo();\n    } else {\n        console.log(\"rechecking shared video after 1 second\")\n        // If not found, wait for a while and then check again\n        //checkingInterval = setTimeout(checkAndRemoveSharedVideo, 1000); // Wait for 1 second (adjust as needed)\n    }\n}\n\n\nfunction removeSharedVideo() {\n\n    const container = document.getElementById(\"lessonSharedContainer\");\n\n    if (container) {\n        // Store the parent element to insert the new container in the same position.\n        const parent = container.parentNode;\n    \n        // Create a new container element.\n        const newContainer = document.createElement(\"div\");\n        newContainer.id = \"lessonSharedContainer\";\n    \n        // Add content or attributes to the new container if needed.\n        newContainer.textContent = \"\";\n    \n        // Replace the old container with the new one.\n        parent.insertBefore(newContainer, container);\n    \n        // Remove the old shared video container.\n        container.remove();\n    }\n\n}\n\nfunction detectDesktopShared(stream) {\n    peer.on('connection', function(conn) {\n        conn.on('data', function(data) {\n            if (data.sharedScreen == true) {\n                sharedScreen = true;\n            } else if (data.sharedScreen == false) {\n\n                console.log(\"detectDesktopShared stopped\");\n\n                stopSharing();\n                sharedScreen = false;\n                return false;\n            } else {\n                alert(\"the stream data\")\n            }\n        });\n    });\n\n\n    peer.on('close', function(conn) {\n        //console.log(\"close\")\n    });\n\n    peer.on('call', call => {\n\n        if (stream == null) {\n\n            //console.log(\"answer the stream without any stream\", call)\n            call.answer();\n\n        } else {\n\n            //console.log(\"answer the stream\", stream)\n\n            call.answer(stream);\n\n            if (stream.getAudioTracks().length == 1 && stream.getVideoTracks().length == 1) {\n                removeElementByID(call.peer);\n                callerElement = document.createElement('video');\n                callerElement.setAttribute(\"id\", call.peer);\n                callerElement.setAttribute(\"class\", \"peerCallBackVideo\");\n                callerElement.muted = false;\n\n                addVideo(callerElement, stream);\n            } else {\n                removeElementByID(call.peer);\n                callerElement = document.createElement('audio');\n                callerElement.setAttribute(\"id\", call.peer);\n                callerElement.setAttribute(\"class\", \"peerCallBackAudio\"); //call peer\n                callerElement.setAttribute(\"controls\", \"controls\");\n                callerElement.muted = false;\n                addAudio(callerElement, stream);\n            }\n        }\n\n        call.on('stream', userStream => {\n\n            if (sharedScreen == true) {\n                sharedVid = document.createElement('video');\n                sharedVid.setAttribute(\"id\", \"sharedVideo\");\n                sharedVid.setAttribute(\"class\", \"userStreamSharedVideo\"); //call peer\n\n                //the lesson shared container must be on the member lesson slider component\n                addVideoContent('lessonSharedContainer', sharedVid, userStream);\n                //hide lesson Slide\n                hideByElementId(\"lessonSlide\");\n            } else {\n                data = {\n                    'id': myId,\n                    'user': user,\n                    'roomID': roomID,\n                    'videoStream': mediaCallStream\n                }\n                socket.emit(\"changeMedia\", data);\n            }\n        });\n\n        call.on('finish', function() {\n            //console.log(\"called finish\")\n        });\n\n        call.on('error', (err) => {\n            alert(err)\n        });\n\n        call.on(\"close\", () => {\n            sharedVid.remove();\n        });\n\n\n    });\n};\n\n\n\nfunction shareScreen() {\n\n    navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n    }).then((userStream) => {\n\n        sharedScreen = userStream;\n\n        //@todo: (hide slide then show the user shared)\n        const sharedVid = document.createElement('video');\n        sharedVid.setAttribute(\"id\", \"sharedVideo\");\n        sharedVid.setAttribute(\"class\", \"shareScreen\");\n        sharedVid.muted = false;\n\n        //the lesson shared container must be on the member lesson slider component\n        addVideoContent('lessonSharedContainer', sharedVid, userStream);\n\n        //hide lesson Slide\n        hideByElementId(\"lessonSlide\");\n\n        //Connect to peers\n        Object.keys(peerConnections).forEach(function(peerID) {\n            //connect and send\n            var conn = peer.connect(peerID);\n            conn.on('open', () => {\n                /*********************               \n                    (NEW) share screen data\n                *************************/\n                let data = {\n                        'id': peerID,\n                        'sharedScreen': true\n                    }\n                    //add to the connection, and send then call\n                conn.send(data);\n                let sharingScreen = peer.call(peerID, sharedScreen);\n            });\n        });\n\n\n        //The screen record is stopped by myself\n        sharedScreen.getVideoTracks()[0].onended = function() {\n            showByElementId(\"lessonSlide\")\n            document.getElementById(\"sharedVideo\").remove();\n            //send this shared screen false to stop peer\n            Object.keys(peerConnections).forEach(function(peerID) {\n                var conn = peer.connect(peerID);\n                conn.on('open', () => {\n                    /*********************               \n                        (STOP SHARE) share screen data\n                    *************************/\n                    let data = {\n                        'id': peerID,\n                        'sharedScreen': false\n                    }\n                    conn.send(data);\n                });\n            })\n        };\n\n\n\n\n\n        //socket.emit(\"userShare\", roomID, sharedScreen);\n\n    });\n}\n\naudioInputSelect.onchange = restart;\naudioOutputSelect.onchange = changeAudioDestination;\nvideoSelect.onchange = restart;\n\n\n\n\npeer.on('connection', function(conn) {\n\n    conn.on('data', function(data) {\n\n        console.log(\"share connection: peer connected\", data)\n\n        if (data.sharedScreen == true) {\n\n            sharedScreen = true;\n\n        } else if (data.sharedScreen == false) {\n\n            console.log(\"connection shared stopped\");\n            stopSharing();\n            sharedScreen = false;\n            return false;\n        } else {\n\n            alert(\"the stream data\")\n        }\n\n    });\n\n    conn.on('close', (conn) => {\n        console.log(\"shared video connection of peer has been closed\", conn)\n\n        const sharedVideo = document.getElementById('sharedVideo');\n\n        // Check if the video element exists before attempting to remove it\n        if (sharedVideo) {\n          // Remove the video element from the DOM\n          sharedVideo.remove();\n        } else {\n          console.log('Element with id \"sharedVideo\" not found.');\n        }\n                \n    });\n\n});\n\npeer.on('open', (id) => {\n\n    //console.log(\"my peer id\" + id)\n    //console.log(\"my user \", user)\n    //console.log(\"my room id \", roomID)\n\n    myId = id;\n\n    data = {\n        'id': id,\n        'user': user,\n        'roomID': roomID\n    }\n\n    socket.emit(\"newUser\", data);\n\n    //start a video with audio connection width data of user\n    let video = true;\n    let audio = true;\n\n    //start the my own video camera\n\n    start(video, audio, data)\n\n});\n\n\n\npeer.on('call', call => {\n\n    let ctr = 0;\n\n    //console.log(\"PEER:: CALLING... for a video stream or audio stream ...\");\n\n    const audioSource = audioInputSelect.value;\n    const videoSource = videoSelect.value;\n    const constraints = {\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\n    };\n\n    navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\n\n        userCallStream = stream;\n\n        if (stream.getAudioTracks().length == 1 && stream.getVideoTracks().length == 1) {\n            //alert(\"stream from sender is a video 1\")\n        } else {\n            //alert(\"stream from sender is a audio 2\")\n        }\n\n        call.answer(stream);\n\n        call.on('stream', (userStream) => {\n\n            recieverCallStream = userStream;\n            peerConnections[call.peer] = call;\n\n            //console.log(\"recieve video from initiator \", call);\n\n            if (ctr == 0) {\n\n                if (sharedScreen == true) {\n\n\n                    console.log(userStream, user, call.peer);\n\n                    var lessonSharedContainer = document.getElementById(\"lessonSharedContainer\");\n                    var sharedVideo = document.getElementById(\"sharedVideo\");\n\n                    if (lessonSharedContainer && sharedVideo && lessonSharedContainer.contains(sharedVideo)) {\n                    // The \"sharedVideo\" element is a child of \"lessonSharedContainer\"\n                    // It already exists\n                    // You can add additional code here if needed\n                    } else {\n\n                        sharedVid = document.createElement('video');\n                        sharedVid.setAttribute(\"id\", \"sharedVideo\");\n                        var classToAdd = \"callSharedVideo-\" + userStream.id;\n                        sharedVid.setAttribute(\"class\", classToAdd);  \n\n                        addVideoContent('lessonSharedContainer', sharedVid, userStream);\n\n                        // Hide lesson Slide\n                        hideByElementId(\"lessonSlide\");                        \n                    }\n\n\n         \n\n                    return false;\n                }\n\n                if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\n\n                    //alert(\"reciever from sender is a video 5 :: (peer)\" + call.peer)\n\n                    removeElementByID(call.peer);\n                    callerElement = document.createElement('video');\n                    callerElement.setAttribute(\"id\", call.peer);\n                    callerElement.setAttribute(\"class\", \"peerCallBackVideo\");\n                    callerElement.muted = false;\n\n                    addVideo(callerElement, userStream);\n                } else {\n\n\n                    //alert(\"reciever from sender is a audio 6 :: (peer)\" + call.peer)\n\n                    removeElementByID(call.peer);\n                    callerElement = document.createElement('audio');\n                    callerElement.setAttribute(\"id\", call.peer);\n                    callerElement.setAttribute(\"class\", \"peerCallBackAudio\"); //call peer\n                    callerElement.setAttribute(\"controls\", \"controls\");\n                    callerElement.muted = false;\n\n                    addAudio(callerElement, userStream);\n\n                }\n            }\n            ctr++\n        });\n\n        call.on('close', () => {\n            removeElementByID(call.peer);\n            //console.log(\"user disconected\")\n        });\n\n    }).catch((error) => {\n\n        //console.log(\"recieve audio from initiator\", call);\n\n\n\n        const audioSource = audioInputSelect.value;\n        const constraints = {\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n            video: false,\n        };\n\n        navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\n\n            userCallStream = stream;\n            if (stream.getAudioTracks().length == 1 && stream.getVideoTracks().length == 1) {\n                //alert(\"stream from sender is a video 3\")\n            } else {\n                //alert(\"stream from sender is a audio 4\")\n            }\n\n            call.answer(stream);\n\n            call.on('stream', (userStream) => {\n\n                recieverCallStream = userStream;\n                peerConnections[call.peer] = call;\n\n                if (ctr == 0) {\n\n\n                    if (sharedScreen == true) {\n                        sharedVid = document.createElement('video');\n                        sharedVid.setAttribute(\"id\", \"sharedVideo_1\");\n                        sharedVid.setAttribute(\"class\", \"stream_shared_video_1\");\n\n                        //the lesson shared container must be on the member lesson slider component\n                        addVideoContent('lessonSharedContainer', sharedVid, userStream);\n\n                        //hide lesson Slide\n                        hideByElementId(\"lessonSlide\");\n\n                        return false;\n                    }\n\n                    if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\n\n                        //alert(\"reciever from sender is a video 7  :: (peer) \" + call.peer)\n\n                        removeElementByID(call.peer);\n                        callerElement = document.createElement('video');\n                        callerElement.setAttribute(\"id\", call.peer);\n                        callerElement.setAttribute(\"class\", \"peerCallBackVideo\");\n                        callerElement.muted = false;\n\n                        addVideo(callerElement, userStream);\n                    } else {\n\n                        //alert(\"reciever from sender is a audio 8 :: (peer)\" + call.peer)\n                        removeElementByID(call.peer);\n                        callerElement = document.createElement('audio');\n                        callerElement.setAttribute(\"id\", call.peer);\n                        callerElement.setAttribute(\"class\", \"peerCallBackAudio\"); //call peer\n                        callerElement.setAttribute(\"controls\", \"controls\");\n                        callerElement.muted = false;\n                        addAudio(callerElement, userStream);\n                    }\n                }\n\n                ctr++\n            });\n\n            call.on('close', () => {\n                removeElementByID(call.peer);\n                //console.log(\"user disconected\")\n            });\n\n        }).catch((error) => {\n            //alert(\"I can't send any video r audio to your contact, please check media\")\n        });\n    });\n});\n\npeer.on('close', (id) => {\n    document.getElementById(id).remove();\n});\n\n\nsocket.on('userJoined', (data) => {\n\n\n    peerConnections[data.id] = data;\n\n    console.log(\"user joined ::: calling initiator with just audio and video\", data.id);\n\n    const audioSource = audioInputSelect.value;\n    const videoSource = videoSelect.value;\n    const constraints = {\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\n    };\n\n    navigator.mediaDevices.getUserMedia(constraints).then((mediaStream) => {\n\n        //console.log(\"user joined ::: calling initiator with just audio and video\", data.id);\n\n        userJoinedStream = mediaStream;\n\n        callback = peer.call(data.id, mediaStream);\n\n        if (callback) {\n\n            peerConnections[callback.peer] = callback;\n\n            let ctr = 0;\n\n            callback.on('stream', (userStream) => {\n\n                if (ctr == 0) {\n\n                    if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\n\n                        removeElementByID(data.id);\n\n                        callerElement = document.createElement('video');\n                        callerElement.setAttribute(\"id\", data.id);\n                        callerElement.setAttribute(\"class\", \"user_joined_peer_call_back\");\n                        callerElement.muted = false;\n\n                        addVideo(callerElement, userStream);\n\n                    } else {\n\n                        removeElementByID(data.id);\n\n                        callerElement = document.createElement('audio');\n                        callerElement.setAttribute(\"id\", data.id);\n                        callerElement.setAttribute(\"class\", \"user_joined_peer_call_back\");\n                        callerElement.setAttribute(\"controls\", \"controls\");\n                        callerElement.muted = false;\n\n                        addAudio(callerElement, userStream);\n\n                    }\n                }\n\n                ctr++;\n            });\n\n            callback.on('close', () => {\n                removeElementByID(data.id);\n            });\n\n            callback.on('error', (err) => {\n                //console.log(err);\n            });\n\n\n        }\n\n        checkVideoDisabled();\n        checkAudioMuted();\n\n    }).catch((error) => {\n\n        //I have only audio, send to the audio to my peer\n        //console.log(\"user joined:: I have only audio, send to the audio to my peer\", data.id);\n\n\n        const audioConstraints = {\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n            video: false,\n        };\n\n        navigator.mediaDevices.getUserMedia(audioConstraints).then((mediaCallStream) => {\n            userJoinedStream = mediaCallStream;\n\n\n            if (myVideoStream) {\n                callback = peer.call(data.id, mediaCallStream);\n            } else {\n                data = {\n                    'id': myId,\n                    'user': user,\n                    'roomID': roomID,\n                    'videoStream': mediaCallStream\n                }\n\n                socket.emit(\"changeMedia\", data);\n\n                //never mind callback, i will call change media\n                callback = null;\n            }\n\n\n\n            if (callback) {\n\n                peerConnections[callback.peer] = callback;\n                let ctr = 0;\n                callback.on('stream', (userStream) => {\n                    if (ctr == 0) {\n\n                        if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\n\n                            //removeElementByID(data.id);\n                            callerElement = document.createElement('video');\n                            callerElement.setAttribute(\"id\", data.id);\n                            callerElement.setAttribute(\"class\", \"user_joined_peer_call_back\");\n                            callerElement.muted = false;\n                            addVideo(callerElement, userStream);\n\n                        } else {\n                            removeElementByID(data.id);\n                            callerElement = document.createElement('audio');\n                            callerElement.setAttribute(\"id\", data.id);\n                            callerElement.setAttribute(\"class\", \"user_joined_peer_call_back\");\n                            callerElement.setAttribute(\"controls\", \"controls\");\n                            callerElement.muted = false;\n                            addAudio(callerElement, userStream);\n                        }\n                    }\n                    ctr++;\n                });\n\n                callback.on('close', () => {\n                    removeElementByID(data.id);\n                });\n\n                callback.on('error', (err) => {\n                    //console.log(err);\n                });\n\n                peerConnections[data.id] = callback;\n            }\n        }).catch((error) => {\n\n            //alert(\"Please connect audioinput device and try again\");\n            // //console.log(error)\n        });\n\n        checkVideoDisabled();\n        checkAudioMuted();\n\n    });\n\n});\n\n\nsocket.on('mediaChanged', (data) => {\n    const audioSource = audioInputSelect.value;\n    const videoSource = videoSelect.value;\n    const constraints = {\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\n    };\n\n    navigator.mediaDevices.getUserMedia(constraints).then((userStream) => {\n\n        //console.log(\"mediaChanged: initiator (recieved)\")\n\n        callback = peer.call(data.id, userStream);\n\n        if (callback) {\n\n            let ctr = 0;\n\n            callback.on('stream', (userStream) => {\n\n                if (ctr == 0) {\n\n                    //console.log(\"recipient callback : video stream\");\n\n                    if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\n\n                        removeElementByID(data.id);\n\n                        callerElement = document.createElement('video');\n                        callerElement.setAttribute(\"id\", callback.peer);\n                        callerElement.setAttribute(\"class\", \"repipient_video_changed\");\n                        callerElement.muted = false;\n\n                        addVideo(callerElement, userStream);\n\n\n                    } else {\n\n                        removeElementByID(data.id);\n                        callerElement = document.createElement('audio');\n                        callerElement.setAttribute(\"id\", data.id);\n                        callerElement.setAttribute(\"class\", \"repipient_audio_changed\");\n                        callerElement.setAttribute(\"controls\", \"controls\");\n                        callerElement.muted = false;\n                        addAudio(callerElement, userStream);\n                    }\n                }\n                ctr++;\n            });\n\n            callback.on('close', () => {\n                removeElementByID(data.id);\n            });\n\n            callback.on('error', (err) => {\n                //console.log(err);\n            });\n\n            peerConnections[data.id] = callback;\n        }\n\n\n    }).catch((error) => {\n\n        const audioConstraints = {\n            audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n            video: false,\n        };\n\n        navigator.mediaDevices.getUserMedia(audioConstraints).then((userStream) => {\n\n            userCallStream = userStream;\n\n            //console.log(\"initiator SENT AND AUDIO\")\n\n            callback = peer.call(data.id, userStream);\n\n            if (callback) {\n\n                let ctr = 0;\n\n                callback.on('stream', (userStream) => {\n\n                    recieverCallStream = userStream;\n\n                    //console.log(\"this is for the audio, stream of the initiator\");\n\n                    if (ctr == 0) {\n\n                        //console.log(userStream.getAudioTracks().length)\n                        //console.log(userStream.getVideoTracks().length)\n\n                        if (userStream.getAudioTracks().length == 1 && userStream.getVideoTracks().length == 1) {\n\n                            //console.log(\"user sent a video\")\n\n                            removeElementByID(callback.peer);\n                            callerElement = document.createElement('video');\n                            callerElement.setAttribute(\"id\", callback.peer);\n                            callerElement.setAttribute(\"class\", \"callerBackVideo\");\n                            callerElement.muted = false;\n                            addVideo(callerElement, userStream);\n                        } else {\n\n                            //console.log(\"user sent a AUDIO\")\n\n                            removeElementByID(callback.peer);\n                            callerElement = document.createElement('audio');\n                            callerElement.setAttribute(\"id\", callback.peer);\n                            callerElement.setAttribute(\"class\", \"callbackAudio_media\");\n                            callerElement.setAttribute(\"controls\", \"controls\");\n                            callerElement.muted = false;\n                            addAudio(callerElement, userStream);\n                        }\n                    }\n\n\n                    ctr++;\n                });\n\n                callback.on('close', () => {\n                    removeElementByID(data.id);\n                });\n\n                callback.on('error', (err) => {\n                    //console.log(err);\n                });\n\n                peerConnections[data.id] = callback;\n            }\n\n\n        }).catch((error) => {\n\n            //alert(\"audio only\");\n            //console.log(error)\n        });\n\n    });\n});\n\n\nsocket.on('userDisconnect', id => {\n    //console.log(\"userDisconnected\", id);\n    removeElementByID(id);\n    try {\n        peerConnections[id].close();\n    } catch (err) {\n        //console.log(\"error disconnect : \", err)\n    }\n});\n\n\nfunction checkAudioMuted() {\n    const muteIcon = document.querySelector('.fa-volume-mute');\n\n    // Check if the 'display' property is set to 'none'\n    if (muteIcon.style.display !== 'none') {       \n        // The element with class 'fa-volume-mute' is not hidden\n        console.log('fa-volume-mute is visible, we will mute mic');\n        muteMic();\n    }\n}\n\nfunction muteMic() {\n  userJoinedStream.getAudioTracks().forEach((track) => {\n    track.enabled = !track.enabled;\n  });\n}\n\n\nfunction toggleMic() {\n    if (userJoinedStream != null) {\n        userJoinedStream.getAudioTracks().forEach((track) => {\n            track.enabled = !track.enabled;\n            //console.log(track);\n\n            if (track.enabled == true) {\n                $('#toggleAudio .fa-volume-up').show();\n                $('#toggleAudio .fa-volume-mute').hide();\n            } else {\n                $('#toggleAudio .fa-volume-up').hide();\n                $('#toggleAudio .fa-volume-mute').show();\n            }\n        });\n\n    }\n\n    if (userCallStream != null) {\n        userCallStream.getAudioTracks().forEach((track) => {\n            track.enabled = !track.enabled;\n            //console.log(track);\n\n            if (track.enabled == true) {\n                $('#toggleAudio .fa-volume-up').show();\n                $('#toggleAudio .fa-volume-mute').hide();\n            } else {\n                $('#toggleAudio .fa-volume-up').hide();\n                $('#toggleAudio .fa-volume-mute').show();\n            }\n        });\n    }\n}\n\n\n\nfunction checkVideoDisabled() {\n    const videoIcon = document.querySelector('.fa-video-slash');    \n    if (videoIcon.style.display !== 'none') {               \n        console.log('video slash is visible, we will disable video');\n        disableVideo();\n    }\n}\n\nfunction disableVideo() {\n    userJoinedStream.getVideoTracks().forEach((track) => {\n      track.enabled = !track.enabled;\n    });\n  }\n\n  \nfunction toggleCamera() {\n    if (userJoinedStream != null) {\n        userJoinedStream.getVideoTracks().forEach((track) => {\n            track.enabled = !track.enabled;\n            //console.log(track);\n\n            if (track.enabled == true) {\n                $('#toggleCamera .fa-video').show();\n                $('#toggleCamera .fa-video-slash').hide();\n            } else {\n                $('#toggleCamera .fa-video').hide();\n                $('#toggleCamera .fa-video-slash').show();\n            }\n        });\n    }\n\n\n    if (userCallStream != null) {\n        userCallStream.getVideoTracks().forEach((track) => {\n            track.enabled = !track.enabled;\n            //console.log(track);\n\n            if (track.enabled == true) {\n                $('#toggleCamera .fa-video').show();\n                $('#toggleCamera .fa-video-slash').hide();\n            } else {\n                $('#toggleCamera .fa-video').hide();\n                $('#toggleCamera .fa-video-slash').show();\n            }\n\n        });\n\n    }\n}\n\nlet shareScreenBtn = document.getElementById(\"btnShareScreen\")\n\nif (shareScreenBtn) {\n    document.getElementById(\"btnShareScreen\").addEventListener(\"click\", function() {\n        shareScreen();\n    });\n}\n\n\nlet toggleCameraBtn = document.getElementById(\"toggleCamera\");\n\nif (toggleCameraBtn) {\n    document.getElementById(\"toggleCamera\").addEventListener(\"click\", function() {\n        toggleCamera()\n    });\n}\n\nlet toggleAudioBtn = document.getElementById(\"toggleAudio\")\n\nif (toggleAudioBtn) {\n    document.getElementById(\"toggleAudio\").addEventListener(\"click\", function() {\n        toggleMic();\n    });\n}\n\n/************VOLUME CONTROL*************** */\nfunction setVolume(volume) {\n    myVideoStream.getAudioTracks().forEach(track => {\n        track.applyConstraints({ volume: volume });\n    });\n}\n\n\n\nconst volumeControl = document.getElementById('volume-control');\nif (volumeControl) {\n    volumeControl.addEventListener('input', () => {\n        setVolume(volumeControl.value);\n    });\n}\n\nfunction destroyVideoSteam(mediaStream) {\n    mediaStream.getVideoTracks().forEach((track) => {\n        track.stop();\n    });\n}\n\nfunction destroyAudioStream(audioStream) {\n    audioStream.getAudioTracks().forEach((track) => {\n        track.stop();\n    });\n}\n\n/************ END SESSION *************** */\nfunction destroyUserMediaContainer() {\n    $('.right-fixed').remove();\n}\n\nasync function destroyUserMedia() {\n    Object.keys(peerConnections).forEach(function(peerID) {\n        peerConnections[peerID].close();\n    });\n\n    if (myVideoStream != null) {\n        destroyVideoSteam(myVideoStream);\n        destroyAudioStream(myVideoStream);\n    }\n\n    if (myAudioStream != null) {\n        destroyVideoSteam(myAudioStream);\n        destroyAudioStream(myAudioStream);\n    }\n\n    if (userJoinedStream != null) {\n        destroyVideoSteam(userJoinedStream);\n        destroyAudioStream(userJoinedStream);\n    }\n\n    if (userCallStream != null) {\n        destroyVideoSteam(userCallStream);\n        destroyAudioStream(userCallStream);\n    }\n\n    if (recieverCallStream != null) {\n        destroyVideoSteam(recieverCallStream);\n        destroyAudioStream(recieverCallStream);\n    }\n\n    destroyUserMediaContainer();\n}\n\nconst destroySessionMediaBtn = document.getElementById('destroy-session-media');\n\nif (destroySessionMediaBtn) {\n    destroySessionMediaBtn.addEventListener('click', () => {\n        destroyUserMedia();\n    });\n}"],"sourceRoot":""}