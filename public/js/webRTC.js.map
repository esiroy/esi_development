{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/webRTC.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","myVideoStream","socket","io","peer","Peer","videoGrid","document","getElementById","myvideo","createElement","setAttribute","muted","mySharedVideo","videoElement","querySelector","audioInputSelect","audioOutputSelect","videoSelect","selectors","gotDevices","deviceInfos","values","map","select","forEach","firstChild","removeChild","length","deviceInfo","option","deviceId","kind","text","label","appendChild","console","log","selectorIndex","Array","slice","childNodes","some","changeAudioDestination","element","sinkId","audioDestination","setSinkId","then","error","errorMessage","selectedIndex","warn","gotStream","stream","window","srcObject","id","connectClientVideo","navigator","mediaDevices","enumerateDevices","disabled","HTMLMediaElement","handleError","peerConnections","message","createUserMedia","getTracks","track","stop","audioSource","videoSource","constraints","audio","exact","undefined","video","getUserMedia","vid","on","conn","isSharedScreen","remove","answer","userStream","addVideo","err","alert","shareScreen","getDisplayMedia","sharedScreen","getVideoTracks","onended","keys","peerID","connect","send","newcall","addEventListener","play","append","replaceVideo","onchange","emit","roomID","type","close","readyState","enabled","getAudioTracks"],"mappings":"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","file":"/js/webRTC.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","const socket = io('https://rtcserver.esuccess-inc.com:40002', {});\nconst peer = new Peer();\nlet myVideoStream;\nlet myId;\nvar videoGrid = document.getElementById('videoGrid')\n\nvar myvideo = document.createElement('video');\nmyvideo.setAttribute(\"id\", \"myVideo\")\nmyvideo.muted = true;\n\nvar mySharedVideo = document.createElement('video');\nmySharedVideo.setAttribute(\"id\", \"sharedVideo\");\nlet isSharedVideo = false;\n\n\n\nconst videoElement = document.querySelector('video');\nvideoElement.setAttribute(\"id\", \"myVideo\")\nvideoElement.muted = true;\n\nconst audioInputSelect = document.querySelector('select#audioSource');\nconst audioOutputSelect = document.querySelector('select#audioOutput');\nconst videoSelect = document.querySelector('select#videoSource');\nconst selectors = [audioInputSelect, audioOutputSelect, videoSelect];\n\naudioOutputSelect.disabled = !('sinkId' in HTMLMediaElement.prototype);\n\n\nnavigator.mediaDevices.enumerateDevices().then(gotDevices).catch(handleError);\n\nfunction gotDevices(deviceInfos) {\n    // Handles being called several times to update labels. Preserve values.\n    const values = selectors.map(select => select.value);\n    selectors.forEach(select => {\n        while (select.firstChild) {\n            select.removeChild(select.firstChild);\n        }\n    });\n    for (let i = 0; i !== deviceInfos.length; ++i) {\n        const deviceInfo = deviceInfos[i];\n        const option = document.createElement('option');\n        option.value = deviceInfo.deviceId;\n        if (deviceInfo.kind === 'audioinput') {\n            option.text = deviceInfo.label || `microphone ${audioInputSelect.length + 1}`;\n            audioInputSelect.appendChild(option);\n        } else if (deviceInfo.kind === 'audiooutput') {\n            option.text = deviceInfo.label || `speaker ${audioOutputSelect.length + 1}`;\n            audioOutputSelect.appendChild(option);\n        } else if (deviceInfo.kind === 'videoinput') {\n            option.text = deviceInfo.label || `camera ${videoSelect.length + 1}`;\n            videoSelect.appendChild(option);\n        } else {\n            console.log('Some other kind of source/device: ', deviceInfo);\n        }\n    }\n    selectors.forEach((select, selectorIndex) => {\n        if (Array.prototype.slice.call(select.childNodes).some(n => n.value === values[selectorIndex])) {\n            select.value = values[selectorIndex];\n        }\n    });\n}\n\n\n// Attach audio output device to video element using device/sink ID.\nfunction attachSinkId(element, sinkId) {\n    if (typeof element.sinkId !== 'undefined') {\n        element.setSinkId(sinkId)\n            .then(() => {\n                console.log(`Success, audio output device attached: ${sinkId}`);\n            })\n            .catch(error => {\n                let errorMessage = error;\n                if (error.name === 'SecurityError') {\n                    errorMessage = `You need to use HTTPS for selecting audio output device: ${error}`;\n                }\n                console.error(errorMessage);\n                // Jump back to first output device in the list as it's the default.\n                audioOutputSelect.selectedIndex = 0;\n            });\n    } else {\n        console.warn('Browser does not support output device selection.');\n    }\n}\n\nfunction changeAudioDestination() {\n    const audioDestination = audioOutputSelect.value;\n    attachSinkId(videoElement, audioDestination);\n}\n\nfunction gotStream(stream) {\n    window.stream = stream; // make stream available to console\n    videoElement.srcObject = stream;\n    // Refresh button list in case labels have become available\n\n    //Register the Video\n    myVideoStream = stream;\n\n    /*\n    var vid = document.createElement('video');\n    vid.setAttribute(\"id\", \"callerVideo\");\n    vid.muted = false;\n\n    addVideo(myvideo, myVideoStream);\n    */\n\n    const call = peer.call(socket.id, myVideoStream);\n\n\n    connectClientVideo(myVideoStream);\n\n\n    return navigator.mediaDevices.enumerateDevices();\n}\n\n\n\n\nconst peerConnections = {}\n\nsocket.on(\"connect\", () => {\n    audioInputSelect.onchange = createUserMedia;\n    audioOutputSelect.onchange = changeAudioDestination;\n    videoSelect.onchange = createUserMedia;\n    createUserMedia();\n});\n\n\n\n\nsocket.on('userJoined', id => {\n\n    console.log(\"new user joined\", id);\n\n    const call = peer.call(id, myVideoStream);\n    const vid = document.createElement('video');\n\n    vid.setAttribute(\"id\", \"userVid\");\n    vid.muted = false;\n\n    if (call) {\n        call.on('error', (err) => {\n            console.log(err);\n        })\n        call.on('stream', userStream => {\n            addVideo(vid, userStream);\n        })\n        call.on('close', () => {\n            vid.remove();\n            console.log(\"user disconected\")\n        });\n\n        peerConnections[id] = call;\n    }\n});\n\n\nfunction handleError(error) {\n    console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\n\n    // createUserAudio();\n}\n\nfunction createUserMedia() {\n\n\n    if (window.stream) {\n        window.stream.getTracks().forEach(track => {\n            track.stop();\n        });\n    }\n    const audioSource = audioInputSelect.value;\n    const videoSource = videoSelect.value;\n\n    const constraints = {\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\n    };\n    navigator.mediaDevices.getUserMedia(constraints).\n    then(gotStream).\n    then(gotDevices).\n    catch(handleError);\n}\n\n\nfunction createUserAudio() {\n\n    //media device only\n    navigator.mediaDevices.getUserMedia({\n        video: false,\n        audio: true,\n    }).then((stream) => {\n\n        myVideoStream = stream;\n\n        var vid = document.createElement('video');\n        vid.setAttribute(\"id\", \"callerVideo\");\n        vid.muted = false;\n\n        addVideo(myvideo, myVideoStream);\n        connectClientVideo(myVideoStream);\n\n    }).catch(err => {\n\n        alert(\"Can't create audio\");\n    });\n}\n\n\n\n\nfunction connectClientVideo(stream) {\n\n\n    var vid = document.createElement('video');\n    vid.setAttribute(\"id\", \"callerVideo\");\n    vid.muted = false;\n\n    peer.on('connection', function(conn) {\n        conn.on('data', function(isSharedScreen) {\n            if (isSharedScreen == true) {\n                vid = document.createElement('video');\n                vid.setAttribute(\"id\", \"sharedVideo\");\n\n            } else {\n                stopSharing();\n                return false;\n            }\n            console.log(isSharedScreen);\n        });\n    });\n\n    peer.on('close', function(conn) {\n        console.log(\"close\")\n    });\n\n    peer.on('call', call => {\n\n        if (stream == null) {\n            call.answer();\n        } else {\n            call.answer(stream);\n        }\n\n\n\n        call.on('stream', userStream => {\n            addVideo(vid, userStream);\n        });\n\n        call.on('finish', function() {\n            console.log(\"called finish\")\n        });\n\n        call.on('error', (err) => {\n            alert(err)\n        });\n\n        call.on(\"close\", () => {\n            console.log(vid);\n            vid.remove();\n        });\n\n        peerConnections[call.peer] = call;\n    });\n\n}\n\n\n\npeer.on('open', (id) => {\n\n    console.log(\"my peer id\" + id)\n    myId = id;\n    socket.emit(\"newUser\", id, roomID);\n});\n\npeer.on('error', (err) => {\n    console.log(err + \" : \" + err.type)\n});\n\n\nsocket.on('userShared', (roomID, stream) => {\n\n    /*\n    console.log(\"user shared :\" + myId);\n    const call = peer.call(myId, stream);\n\n    call.on(\"stream\", (remoteStream) => {\n        // Show stream in some <video> element.\n    });\n    */\n\n});\n\n\n\n//user end stop sharing\nfunction stopSharing() {\n    document.getElementById(\"sharedVideo\").remove();\n}\n\n\nfunction shareScreen() {\n\n    navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n    }).then((stream) => {\n\n        sharedScreen = stream;\n\n        //The screen record is stopped by myself\n        sharedScreen.getVideoTracks()[0].onended = function() {\n            document.getElementById(\"sharedVideo\").remove();\n\n            //send this shared screen false to stop peer\n            Object.keys(peerConnections).forEach(function(peerID) {\n                var conn = peer.connect(peerID);\n                conn.on('open', () => {\n                    let isSharedScreen = false;\n                    conn.send(isSharedScreen);\n                });\n            })\n        };\n\n        //Connect to peers\n        Object.keys(peerConnections).forEach(function(peerID) {\n            //connect and send\n            var conn = peer.connect(peerID);\n            conn.on('open', () => {\n                let isSharedScreen = true;\n                conn.send(isSharedScreen);\n                const vid = document.createElement('video');\n                vid.setAttribute(\"id\", \"vid\");\n\n                const newcall = peer.call(peerID, sharedScreen);\n\n                newcall.on('error', (err) => {\n                    console.log(err)\n                });\n\n                newcall.on('stream', userStream => {\n                    // addVideo(vid, userStream);\n                });\n\n                newcall.on('close', () => {\n                    vid.remove();\n                    console.log(\"user disconect\")\n                });\n\n            });\n\n        });\n\n        replaceVideo(mySharedVideo, sharedScreen);\n\n        //socket.emit(\"userShare\", roomID, sharedScreen);\n\n    });\n}\n\n\n\n\n\n\nsocket.on('userDisconnect', id => {\n    if (peerConnections[id]) {\n        peerConnections[id].close();\n    }\n});\n\n\nfunction replaceVideo(video, stream) {\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n    videoGrid.append(video);\n\n}\n\n\nfunction addVideo(video, stream) {\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n    videoGrid.append(video);\n}\n\n\nfunction stopCam() {\n\n    //myVideoStream.getVideoTracks().forEach(track => track.stop());\n\n    myVideoStream.getVideoTracks().forEach(function(track) {\n        if (track.readyState == 'live') {\n            track.stop();\n        } else {\n            console.log(\"video broadcasting live\");\n        }\n    });\n\n    myVideoStream.getTracks().forEach(function(track) {\n        if (track.readyState == 'live') {\n            track.stop();\n        } else {\n            console.log(\"audio not broadcasting live\");\n        }\n    });\n}\n\n// stop only camera\nfunction stopVideoOnly(stream) {\n    stream.getTracks().forEach(function(track) {\n        if (track.readyState == 'live' && track.kind === 'video') {\n            track.stop();\n        }\n    });\n}\n\n// stop only mic\nfunction stopAudioOnly(stream) {\n    stream.getTracks().forEach(function(track) {\n        if (track.readyState == 'live' && track.kind === 'audio') {\n            track.stop();\n        }\n    });\n}\n\nfunction muteCam() {\n    myVideoStream.getVideoTracks().forEach((track) => {\n        track.enabled = !track.enabled\n        console.log(track)\n    });\n}\n\nfunction muteMic() {\n    myVideoStream.getAudioTracks().forEach(track => track.enabled = !track.enabled);\n}\n\n//DOM Execution\ndocument.getElementById(\"stopCamera\").addEventListener(\"click\", function() {\n    stopCam();\n});\n\ndocument.getElementById(\"toggleCamera\").addEventListener(\"click\", function() {\n    muteCam();\n});\n\ndocument.getElementById(\"toggleAudio\").addEventListener(\"click\", function() {\n    muteMic();\n});\n\ndocument.getElementById(\"shareScreen\").addEventListener(\"click\", function() {\n    shareScreen();\n});"],"sourceRoot":""}