{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/webRTC.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","myVideoStream","myAudioStream","callerStream","myId","socket","io","peer","Peer","videoGrid","document","getElementById","myvideo","createElement","setAttribute","muted","console","log","user","mySharedVideo","audioInputSelect","querySelector","audioOutputSelect","videoSelect","selectors","gotDevices","deviceInfos","values","map","select","forEach","firstChild","removeChild","length","deviceInfo","option","deviceId","kind","text","label","appendChild","selectorIndex","Array","slice","childNodes","some","changeAudioDestination","element","sinkId","audioDestination","setSinkId","then","error","message","selectedIndex","warn","gotStream","stream","addVideo","vid","on","conn","isSharedScreen","stopSharing","answer","userStream","err","alert","remove","peerConnections","connectClientVideo","keys","peerID","navigator","mediaDevices","enumerateDevices","disabled","HTMLMediaElement","handleMediaError","getUserMedia","video","audio","audioElement","addAudio","connectClientAudio","createUserMedia","window","getTracks","track","stop","audioSource","videoSource","constraints","exact","undefined","shareScreen","getDisplayMedia","sharedScreen","getVideoTracks","onended","connect","send","newcall","srcObject","addEventListener","play","append","replaceVideo","onchange","data","id","roomID","getAudioTracks","emit","type","close","readyState","enabled"],"mappings":"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","file":"/js/webRTC.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","const socket = io('https://rtcserver.esuccess-inc.com:40002', {});\n\nconst peer = new Peer();\n\nlet myVideoStream;\nlet myAudioStream;\n\nlet callerStream;\n\nlet myId;\nvar videoGrid = document.getElementById('videoGrid')\n\n//My video is going to be muted for feedback suppression while playing\nvar myvideo = document.createElement('video');\nmyvideo.setAttribute(\"id\", \"myVideo\")\nmyvideo.muted = true;\n\n\n\n\n\nconsole.log(\"user\", user);\n\n//My Shared video will be muted for feedback suppression while playing\nvar mySharedVideo = document.createElement('video');\nmySharedVideo.setAttribute(\"id\", \"sharedVideo\");\nmySharedVideo.muted = true;\n\n\n//When loading shared video is always hidden and false\nlet isSharedVideo = false;\n\n\nconst audioInputSelect = document.querySelector('select#audioSource');\nconst audioOutputSelect = document.querySelector('select#audioOutput');\nconst videoSelect = document.querySelector('select#videoSource');\nconst selectors = [audioInputSelect, audioOutputSelect, videoSelect];\n\naudioOutputSelect.disabled = !('sinkId' in HTMLMediaElement.prototype);\n\n\nnavigator.mediaDevices.enumerateDevices().then(gotDevices).catch(handleMediaError);\n\nfunction gotDevices(deviceInfos) {\n    // Handles being called several times to update labels. Preserve values.\n    const values = selectors.map(select => select.value);\n    selectors.forEach(select => {\n        while (select.firstChild) {\n            select.removeChild(select.firstChild);\n        }\n    });\n    for (let i = 0; i !== deviceInfos.length; ++i) {\n        const deviceInfo = deviceInfos[i];\n        const option = document.createElement('option');\n        option.value = deviceInfo.deviceId;\n        if (deviceInfo.kind === 'audioinput') {\n            option.text = deviceInfo.label || `microphone ${audioInputSelect.length + 1}`;\n            audioInputSelect.appendChild(option);\n        } else if (deviceInfo.kind === 'audiooutput') {\n            option.text = deviceInfo.label || `speaker ${audioOutputSelect.length + 1}`;\n            audioOutputSelect.appendChild(option);\n        } else if (deviceInfo.kind === 'videoinput') {\n            option.text = deviceInfo.label || `camera ${videoSelect.length + 1}`;\n            videoSelect.appendChild(option);\n        } else {\n            console.log('Some other kind of source/device: ', deviceInfo);\n        }\n    }\n    selectors.forEach((select, selectorIndex) => {\n        if (Array.prototype.slice.call(select.childNodes).some(n => n.value === values[selectorIndex])) {\n            select.value = values[selectorIndex];\n        }\n    });\n}\n\n\n// Attach audio output device to video element using device/sink ID.\nfunction attachSinkId(element, sinkId) {\n    if (typeof element.sinkId !== 'undefined') {\n        element.setSinkId(sinkId)\n            .then(() => {\n                console.log(`Success, audio output device attached: ${sinkId}`);\n            })\n            .catch(error => {\n                let errorMessage = error;\n                if (error.name === 'SecurityError') {\n                    errorMessage = `You need to use HTTPS for selecting audio output device: ${error}`;\n                }\n                //console.error(errorMessage);\n\n                console.log(error.message + \" : \" + error.name);\n\n                // Jump back to first output device in the list as it's the default.\n                audioOutputSelect.selectedIndex = 0;\n            });\n    } else {\n        console.warn('Browser does not support output device selection.');\n    }\n}\n\nfunction changeAudioDestination() {\n    const audioDestination = audioOutputSelect.value;\n    console.log(\"my audio destination:\", audioDestination);\n    attachSinkId(myvideo, audioDestination);\n}\n\nfunction gotStream(stream) {\n    //Register the Video\n    myVideoStream = stream;\n\n    addVideo(myvideo, myVideoStream);\n\n    connectClientVideo(myVideoStream);\n\n    Object.keys(peerConnections).forEach(function(peerID) {\n        if (myId !== peerID) {\n\n            peer.call(peerID, myVideoStream);\n\n            if (call) {\n                call.on('error', (err) => {\n                    console.log(err);\n                })\n                call.on('stream', userStream => {\n                    // addVideo(vid, userStream);\n                })\n                call.on('close', () => {\n                    vid.remove();\n                    console.log(\"user disconected\")\n                });\n            }\n        }\n    });\n\n\n    return navigator.mediaDevices.enumerateDevices();\n}\n\n\n\n\nconst peerConnections = {}\n\nsocket.on(\"connect\", () => {\n    audioInputSelect.onchange = createUserMedia;\n    audioOutputSelect.onchange = changeAudioDestination;\n    videoSelect.onchange = createUserMedia;\n    createUserMedia();\n});\n\n\nfunction detectCalls(call) {\n    if (call) {\n\n    }\n}\n\n\nsocket.on('userJoined', (data) => {\n\n    let id = data.id;\n    let roomID = data.roomID;\n    let user = data.user;\n\n    console.log(\"new user joined\", data);\n\n\n    //@todo: When user joins the \"videostream\" or \"audio stream\" is not known???\n    //@todo: make a script to determine which \n\n\n    if (myVideoStream) {\n\n        const call = peer.call(id, myVideoStream);\n        if (call) {\n\n            call.on('error', (err) => {\n                console.log(err);\n            });\n\n            call.on('stream', userStream => {\n\n                console.log(\"on stream while I have a video\");\n\n\n\n                if (userStream.getAudioTracks().length && userStream.getVideoTracks().length) {\n\n                    const vid = document.createElement('video');\n                    vid.setAttribute(\"id\", \"userVideo\");\n                    vid.muted = false;\n                    addVideo(vid, userStream);\n\n                } else {\n\n                    const audioElement = document.createElement('audio');\n                    audioElement.setAttribute(\"id\", \"callerAudio\");\n                    audioElement.setAttribute(\"controls\", \"controls\");\n                    audioElement.muted = false;\n                    addAudio(audioElement, userStream);\n                }\n\n            });\n\n            call.on('close', () => {\n\n                if (callerStream.getAudioTracks().length && callerStream.getVideoTracks().length) {\n                    vid.remove();\n                } else {\n                    audioElement.remove();\n                }\n                console.log(\"user disconected\")\n            });\n\n            peerConnections[id] = call;\n        }\n\n    } else {\n\n        const call = peer.call(id, myAudioStream);\n\n        if (call) {\n            call.on('error', (err) => {\n                console.log(err);\n            })\n            call.on('stream', userStream => {\n\n                console.log(\"on stream while i'm on audio\");\n\n                callerStream = userStream;\n\n                if (userStream.getAudioTracks().length && userStream.getVideoTracks().length) {\n\n                    const vid = document.createElement('video');\n                    vid.setAttribute(\"id\", \"userVideo\");\n                    vid.muted = false;\n                    addVideo(vid, userStream);\n\n                } else {\n\n                    const audioElement = document.createElement('audio');\n                    audioElement.setAttribute(\"id\", \"callerAudio\");\n                    audioElement.setAttribute(\"controls\", \"controls\");\n                    audioElement.muted = false;\n                    addAudio(audioElement, userStream);\n                }\n\n\n            })\n            call.on('close', () => {\n\n                if (callerStream.getAudioTracks().length && callerStream.getVideoTracks().length) {\n                    vid.remove();\n                } else {\n                    audioElement.remove();\n                }\n\n\n                console.log(\"user disconected\")\n            });\n\n            peerConnections[id] = call;\n        }\n    }\n\n\n\n});\n\n\nfunction handleMediaError(error) {\n\n    console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\n    createUserAudio();\n\n    /*\n    if (error.name == \"NotFoundError\") {\n        createUserAudio();\n\n    } else {\n        console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\n    }\n    */\n}\n\nfunction createUserMedia() {\n    if (window.stream) {\n        window.stream.getTracks().forEach(track => {\n            track.stop();\n        });\n    }\n    const audioSource = audioInputSelect.value;\n    const videoSource = videoSelect.value;\n    const constraints = {\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\n    };\n    navigator.mediaDevices.getUserMedia(constraints).\n    then(gotStream).\n    then(gotDevices).\n    catch((err) => {\n        handleMediaError(err)\n    });\n}\n\n\nfunction createUserAudio() {\n\n    console.log(\"creating audi only\");\n\n    //media device only\n    navigator.mediaDevices.getUserMedia({\n        video: false,\n        audio: true,\n    }).then((stream) => {\n\n        myAudioStream = stream;\n\n        //Create my audio stream\n        var audioElement = document.createElement('audio');\n        audioElement.setAttribute(\"id\", \"myAudio\");\n        audioElement.setAttribute(\"controls\", \"controls\");\n        audioElement.muted = true;\n\n        addAudio(audioElement, myAudioStream);\n\n        connectClientAudio(myAudioStream);\n\n    }).catch(err => {\n\n        alert(\"Can't create audio\");\n    });\n}\n\n\nfunction connectClientAudio(stream) {\n\n    console.log(\"connect client Audio stream\");\n\n    var audioElement = document.createElement('audio');\n    audioElement.setAttribute(\"id\", \"callerAudio\");\n    audioElement.setAttribute(\"controls\", \"controls\");\n    audioElement.muted = false;\n\n    peer.on('connection', function(conn) {\n        conn.on('data', function(isSharedScreen) {\n            if (isSharedScreen == true) {\n                vid = document.createElement('video');\n                vid.setAttribute(\"id\", \"sharedVideo\");\n\n            } else {\n                stopSharing();\n                return false;\n            }\n            console.log(isSharedScreen);\n        });\n    });\n\n    peer.on('close', function(conn) {\n        console.log(\"close\")\n    });\n\n    peer.on('call', call => {\n\n        if (stream == null) {\n            call.answer();\n        } else {\n            call.answer(stream);\n        }\n\n        call.on('stream', userStream => {\n            addAudio(audioElement, userStream);\n        });\n\n        call.on('finish', function() {\n            console.log(\"called finish\")\n        });\n\n        call.on('error', (err) => {\n            alert(err)\n        });\n\n        call.on(\"close\", () => {\n            audioElement.remove();\n        });\n\n        peerConnections[call.peer] = call;\n    });\n\n}\n\n\nfunction connectClientVideo(stream) {\n\n\n    var vid = document.createElement('video');\n    vid.setAttribute(\"id\", \"callerVideo\");\n    vid.muted = false;\n\n    peer.on('connection', function(conn) {\n\n        conn.on('data', function(isSharedScreen) {\n\n            if (isSharedScreen == true) {\n                vid = document.createElement('video');\n                vid.setAttribute(\"id\", \"sharedVideo\");\n\n            } else {\n                stopSharing();\n                return false;\n            }\n            console.log(isSharedScreen);\n        });\n    });\n\n    peer.on('close', function(conn) {\n        console.log(\"close\")\n    });\n\n    peer.on('call', call => {\n\n        if (stream == null) {\n            call.answer();\n        } else {\n            call.answer(stream);\n        }\n\n        call.on('stream', userStream => {\n            addVideo(vid, userStream);\n        });\n\n        call.on('finish', function() {\n            console.log(\"called finish\")\n        });\n\n        call.on('error', (err) => {\n            alert(err)\n        });\n\n        call.on(\"close\", () => {\n            console.log(vid);\n            vid.remove();\n        });\n\n        peerConnections[call.peer] = call;\n    });\n\n}\n\n\n\npeer.on('open', (id) => {\n    console.log(\"my peer id\" + id)\n    console.log(\"my user \", user)\n    console.log(\"my room id \", roomID)\n\n    myId = id;\n\n    data = {\n        'id': id,\n        'user': user,\n        'roomID': roomID\n    }\n\n    socket.emit(\"newUser\", data);\n});\n\npeer.on('error', (err) => {\n    console.log(err + \" : \" + err.type)\n});\n\n\nsocket.on('userShared', (roomID, stream) => {\n\n    /*\n    console.log(\"user shared :\" + myId);\n    const call = peer.call(myId, stream);\n\n    call.on(\"stream\", (remoteStream) => {\n        // Show stream in some <video> element.\n    });\n    */\n\n});\n\n\n\n//user end stop sharing\nfunction stopSharing() {\n    document.getElementById(\"sharedVideo\").remove();\n}\n\n\nfunction shareScreen() {\n\n    navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n    }).then((stream) => {\n\n        sharedScreen = stream;\n\n        //The screen record is stopped by myself\n        sharedScreen.getVideoTracks()[0].onended = function() {\n            document.getElementById(\"sharedVideo\").remove();\n\n            //send this shared screen false to stop peer\n            Object.keys(peerConnections).forEach(function(peerID) {\n                var conn = peer.connect(peerID);\n                conn.on('open', () => {\n                    let isSharedScreen = false;\n                    conn.send(isSharedScreen);\n                });\n            })\n        };\n\n        //Connect to peers\n        Object.keys(peerConnections).forEach(function(peerID) {\n            //connect and send\n            var conn = peer.connect(peerID);\n\n            conn.on('open', () => {\n                let isSharedScreen = true;\n                conn.send(isSharedScreen);\n                const vid = document.createElement('video');\n                vid.setAttribute(\"id\", \"vid\");\n\n                const newcall = peer.call(peerID, sharedScreen);\n\n                newcall.on('error', (err) => {\n                    console.log(err)\n                });\n\n                newcall.on('stream', userStream => {\n                    // addVideo(vid, userStream);\n                });\n\n                newcall.on('close', () => {\n                    vid.remove();\n                    console.log(\"user disconect\")\n                });\n\n            });\n\n        });\n\n        replaceVideo(mySharedVideo, sharedScreen);\n\n        //socket.emit(\"userShare\", roomID, sharedScreen);\n\n    });\n}\n\n\n\n\n\n\nsocket.on('userDisconnect', id => {\n    if (peerConnections[id]) {\n        peerConnections[id].close();\n    }\n});\n\n\nfunction replaceVideo(video, stream) {\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n    videoGrid.append(video);\n\n}\n\nfunction addAudio(audio, stream) {\n    audio.srcObject = stream;\n    audio.addEventListener('loadedmetadata', () => {\n        audio.play()\n    })\n    videoGrid.append(audio);\n}\n\nfunction addVideo(video, stream) {\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n    videoGrid.append(video);\n}\n\n\nfunction stopCam() {\n    myVideoStream.getVideoTracks().forEach((track) => {\n        if (track.readyState == 'live') {\n            track.stop();\n        } else {\n            console.log(\"video broadcasting live\");\n        }\n    });\n\n    myVideoStream.getTracks().forEach((track) => {\n        if (track.readyState == 'live') {\n            track.stop();\n        } else {\n            console.log(\"audio not broadcasting live\");\n        }\n    });\n}\n\n// stop only camera\nfunction stopVideoOnly(stream) {\n    stream.getTracks().forEach(function(track) {\n        if (track.readyState == 'live' && track.kind === 'video') {\n            track.stop();\n        }\n    });\n}\n\n// stop only mic\nfunction stopAudioOnly(stream) {\n    stream.getTracks().forEach(function(track) {\n        if (track.readyState == 'live' && track.kind === 'audio') {\n            track.stop();\n        }\n    });\n}\n\nfunction muteCam() {\n    myVideoStream.getVideoTracks().forEach((track) => {\n        track.enabled = !track.enabled\n        console.log(track)\n    });\n}\n\nfunction muteMic() {\n    myVideoStream.getAudioTracks().forEach(track => track.enabled = !track.enabled);\n}\n\n//DOM Execution\ndocument.getElementById(\"stopCamera\").addEventListener(\"click\", function() {\n    stopCam();\n});\n\ndocument.getElementById(\"toggleCamera\").addEventListener(\"click\", function() {\n    muteCam();\n});\n\ndocument.getElementById(\"toggleAudio\").addEventListener(\"click\", function() {\n    muteMic();\n});\n\ndocument.getElementById(\"shareScreen\").addEventListener(\"click\", function() {\n    shareScreen();\n});"],"sourceRoot":""}